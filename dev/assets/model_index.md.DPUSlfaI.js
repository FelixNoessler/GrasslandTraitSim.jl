import{_ as l,c as o,j as s,a as e,G as t,a5 as n,B as r,o as p}from"./chunks/framework.DUg_Vbhg.js";const v=JSON.parse('{"title":"Difference equation","description":"","frontmatter":{},"headers":[],"relativePath":"model/index.md","filePath":"model/index.md","lastUpdated":null}'),d={name:"model/index.md"},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function m(k,a,b,f,g,E){const i=r("Badge");return p(),o("div",null,[a[9]||(a[9]=s("h1",{id:"Difference-equation",tabindex:"-1"},[e("Difference equation "),s("a",{class:"header-anchor",href:"#Difference-equation","aria-label":'Permalink to "Difference equation {#Difference-equation}"'},"​")],-1)),a[10]||(a[10]=s("p",null,[e("The main function to solve the difference equations and get the solution with all parameters is "),s("a",{href:"/GrasslandTraitSim.jl/dev/model/index#GrasslandTraitSim.solve_prob"},"solve_prob"),e(".")],-1)),s("details",h,[s("summary",null,[a[0]||(a[0]=s("a",{id:"GrasslandTraitSim.solve_prob",href:"#GrasslandTraitSim.solve_prob"},[s("span",{class:"jlbinding"},"GrasslandTraitSim.solve_prob")],-1)),a[1]||(a[1]=e()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[2]||(a[2]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">solve_prob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    input_obj,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prealloc,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    prealloc_specific,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    trait_input,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    θ_type,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Solve the model for one site.</p><p>Intialize the parameters, the state variables and the output vectors (see <a href="/GrasslandTraitSim.jl/dev/model/initialization#GrasslandTraitSim.initialization"><code>initialization</code></a>).</p><p>In addition some vectors are preallocated to avoid allocations in the main loop. Then, run the main loop and store the results with all parameters in a container.</p><p>All input variables are explained in a tutorial: <a href="/GrasslandTraitSim.jl/dev/tutorials/how_to_prepare_input#How-to-prepare-the-input-data-to-start-a-simulation">How to prepare the input data to start a simulation</a></p><p>There is also a tutorial on the model output: <a href="/GrasslandTraitSim.jl/dev/tutorials/how_to_analyse_output#How-to-analyse-the-model-output">How to analyse the model output</a></p><p><a href="https://github.com/FelixNoessler/GrasslandTraitSim.jl/blob/da1919b90e4625273a41926975ef08782f2c1b7b/src/main_functions.jl#L1" target="_blank" rel="noreferrer">source</a></p>`,7))]),a[11]||(a[11]=s("h2",{id:"Main-loop",tabindex:"-1"},[e("Main loop "),s("a",{class:"header-anchor",href:"#Main-loop","aria-label":'Permalink to "Main loop {#Main-loop}"'},"​")],-1)),s("details",c,[s("summary",null,[a[3]||(a[3]=s("a",{id:"GrasslandTraitSim.main_loop!",href:"#GrasslandTraitSim.main_loop!"},[s("span",{class:"jlbinding"},"GrasslandTraitSim.main_loop!")],-1)),a[4]||(a[4]=e()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[5]||(a[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">main_loop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; container)</span></span></code></pre></div><p>Run the main loop for all days.</p><p>Calls the function <a href="/GrasslandTraitSim.jl/dev/model/index#GrasslandTraitSim.one_day!"><code>one_day!</code></a> for each day and set the calculated density differences to the output variables.</p><p><a href="https://github.com/FelixNoessler/GrasslandTraitSim.jl/blob/da1919b90e4625273a41926975ef08782f2c1b7b/src/main_functions.jl#L51" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",u,[s("summary",null,[a[6]||(a[6]=s("a",{id:"GrasslandTraitSim.one_day!",href:"#GrasslandTraitSim.one_day!"},[s("span",{class:"jlbinding"},"GrasslandTraitSim.one_day!")],-1)),a[7]||(a[7]=e()),t(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),a[8]||(a[8]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">one_day!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; t, container)</span></span></code></pre></div><p>Calculate differences of all state variables for one time step (one day).</p><p><a href="https://github.com/FelixNoessler/GrasslandTraitSim.jl/blob/da1919b90e4625273a41926975ef08782f2c1b7b/src/one_day.jl#L14" target="_blank" rel="noreferrer">source</a></p>',3))])])}const j=l(d,[["render",m]]);export{v as __pageData,j as default};
