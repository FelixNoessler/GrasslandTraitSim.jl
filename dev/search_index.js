var documenterSearchIndex = {"docs":
[{"location":"Modelling_API/main_equations/","page":"Difference equation","title":"Difference equation","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/main_equations/#Difference-equation","page":"Difference equation","title":"Difference equation","text":"","category":"section"},{"location":"Modelling_API/main_equations/","page":"Difference equation","title":"Difference equation","text":"The main function to solve the difference equations and get the solution with all parameters is solve_prob.","category":"page"},{"location":"Modelling_API/main_equations/","page":"Difference equation","title":"Difference equation","text":"solve_prob","category":"page"},{"location":"Modelling_API/main_equations/#GrasslandTraitSim.solve_prob","page":"Difference equation","title":"GrasslandTraitSim.solve_prob","text":"solve_prob(; input_obj, inf_p, calc = nothing)\n\nSolve the model for one site.\n\nIntialize the parameters, the state variables and the output vectors. In addition some vectors are preallocated to avoid allocations in the main loop. Then, run the main loop and store the results with all parameters in a container.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/main_equations/#Main-loop","page":"Difference equation","title":"Main loop","text":"","category":"section"},{"location":"Modelling_API/main_equations/","page":"Difference equation","title":"Difference equation","text":"main_loop!\none_day!","category":"page"},{"location":"Modelling_API/main_equations/#GrasslandTraitSim.main_loop!","page":"Difference equation","title":"GrasslandTraitSim.main_loop!","text":"main_loop!(; container)\n\nRun the main loop for all days.\n\nCalls the function one_day! for each day and set the calculated density differences to the output variables.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/main_equations/#GrasslandTraitSim.one_day!","page":"Difference equation","title":"GrasslandTraitSim.one_day!","text":"one_day!(; container, p, t)\n\nCalculate the density differences of all state variables of one day.\n\nDensity differences for biomass:\n\ntextdu_biomass = textgrowth - textsenescence - textdefoliation\n\nDensity differences for water:\n\ntextdu_water = textprecipitation - textdrainage - textactual_evapotranspiration\n\nMain procedure (in the following order):\n\nif npatches > 1\n\nclonal growth at day of the year = 250\n\nloop over patches:\n\nset very low biomass (< 1e-30 kg ha⁻¹) to zero\ndefoliation (mowing, grazing, trampling)\ngrowth\nsenescence\nsoil water dynamics\n\n\n\n\n\n","category":"function"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"CurrentModule = GrasslandTraitSim","category":"page"},{"location":"parameter/#Model-Parameter","page":"Parameter","title":"Model Parameter","text":"","category":"section"},{"location":"parameter/#Simulation-settings","page":"Parameter","title":"Simulation settings","text":"","category":"section"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"Parameter Description used in\nnspecies number of species (plant functional types) -\nnpatches number of quadratic patches within one site -\ntrait_seed seed for the generation of traits, if missing then seed is selected randomly random_traits!\nnutheterog heterogeneity of the nutrient availability within one site, only applicable if more than one patch is simulated per site input_nutrients!","category":"page"},{"location":"parameter/#Calibrated-parameter","page":"Parameter","title":"Calibrated parameter","text":"","category":"section"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"Parameter Description used in\nα_sen α value of a linear equation that relate the leaf life span to the senescence rate senescence_rate!\nsla_tr reference community weighted mean specific leaf area, if the community weighted mean specific leaf area is equal to sla_tr then transpiration will not increase or decrease transpiration\nsla_tr_exponent controls how strongly a community mean specific leaf area that deviates from sla_tr is affecting the transpiration transpiration\nbiomass_dens if the matrix multiplication between the trait similarity matrix and the biomass equals biomass_dens the available water and nutrients for growth are not in- or decreased below_ground_competition!\nbelowground_density_efffect controls how strongly the available water and nutrients are in- or decreased if the matrix multiplication between the trait similarity matrix and the biomass of the species is above or below of biomass_dens below_ground_competition!\nheight_strength controls how strongly taller plants gets more light for growth height_influence!\nleafnitrogen_graz_exp controls how strongly grazers prefer plant species with high leaf nitrogen content grazing!\ngrazing_half_factor total biomass  [kg ha⁻¹] when the daily consumption by grazers reaches half of their maximal consumption defined by κ cdot livestock density grazing!\ntrampling_factor defines together with the height of the plants and the livestock density the proportion of biomass that is trampled cdot 10^-3 [ha m⁻¹] trampling!\nmowing_mid_days number of days after a mowing event when the plants are grown back to half of their normal size mowing!\nδ_wrsa maximal reduction of the plant-available water linked to the trait root surface area / aboveground biomass init_transfer_functions!\nδ_sla maximal reduction of the plant-available water linked to the trait specific leaf area init_transfer_functions!\nδ_amc maximal reduction of the plant-available nutrients linked to the trait arbuscular mycorrhizal colonisation rate init_transfer_functions!\nδ_nrsa maximal reduction of the plant-available nutrients linked to the trait root surface area / aboveground biomass init_transfer_functions!\nβ_sen slope of a linear equation that relates the leaf life span to the senescence rate senescence_rate!\ntotalN_β slope parameter for total N in logistic function to calculate nutrient index input_nutrients!\nCN_β slope parameter for the inverse of the CN ratio in logistic function to calculate nutrient index input_nutrients!","category":"page"},{"location":"parameter/#Fixed-parameter","page":"Parameter","title":"Fixed parameter","text":"","category":"section"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"Parameter Value Description used in reference\nmintotalN 0.0 [g kg⁻¹] factor to rescale total N values input_nutrients! based on the minimum total N of ≈ 1.25 [g kg⁻¹] in the data from the Biodiversity Exploratories [1][2][3][4]\nmaxtotalN 50.0 [g kg⁻¹] factor to rescale total N values input_nutrients! based on the maximum total N of ≈ 30.63 [g kg⁻¹] in the data from the Biodiversity Exploratories [1][2][3][4]\nminCNratio 5.0 [-] factor to rescale CN values input_nutrients! based on the minimum CN ratio of ≈ 9.05 [-] in the data from the Biodiversity Exploratories [1][2][3][4]\nmaxCNratio 25.0 [-] factor to rescale CN values input_nutrients! based on the maximum CN ratio of ≈ 13.60 [-] in the data from the Biodiversity Exploratories [1][2][3][4]\nα extinction coefficient potential_growth!  \nRUE_max maximum radiation use efficiency potential_growth!  \nγ1  radiation_reduction  \nγ2  radiation_reduction  \nT₀  temperature_reduction  \nT₁  temperature_reduction  \nT₂  temperature_reduction  \nT₃  temperature_reduction  \nPETₘₐₓ  water_reduction!  \nβ₁  water_reduction!  \nβ₂  water_reduction!  \nSEAₘᵢₙ  seasonal_reduction  \nSEAₘₐₓ  seasonal_reduction  \nST₁  seasonal_reduction  \nST₂  seasonal_reduction  \nSENₘᵢₙ  seasonal_component_senescence  \nSENₘₐₓ  seasonal_component_senescence  \nΨ₁  seasonal_component_senescence  \nΨ₂  seasonal_component_senescence  \nκ 22 [kg d⁻¹] consumption of a livestock unit per day grazing! ","category":"page"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"In addition, regression equation by [5] used to calculate the leaf life span from the specific leaf area (see senescence_rate!). Regression equation from [6] used to derive the water holding capacity and the permanent wilting point (see input_WHC_PWP!)","category":"page"},{"location":"parameter/#Scale-parameter-for-calibration","page":"Parameter","title":"Scale parameter for calibration","text":"","category":"section"},{"location":"parameter/","page":"Parameter","title":"Parameter","text":"Parameter Description\nb_biomass \nb_sla \nb_lncm \nb_amc \nb_height \nb_rsa_above ","category":"page"},{"location":"biodiversity_exploratories/likelihood/#Likelihood-calculation-for-the-Biodiversity-Exploratories-data-set","page":"Likelihood","title":"Likelihood calculation for the Biodiversity Exploratories data set","text":"","category":"section"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"We can compute the probability of observing the data x, given the simulation of the model with the parameters theta, by calculating the likelihood function mathcalL(theta mid x).","category":"page"},{"location":"biodiversity_exploratories/likelihood/#Soil-water-content","page":"Likelihood","title":"Soil water content","text":"","category":"section"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"In the Biodiversity Exploratories, data of the soil moisture SM_m is in  available. The model simulates the soil water content SWC_sim in mm. We first transform the measured soil moisture SM_m to a soil water content SWC_m. Afterwards, we calculate the likelihood of observing the measured soil water content SWC_m given the simulated soil water content SWC_sim.","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"beginalign\n    SWC_m = textmoistureconv_alpha + textmoistureconv_beta cdot textrootdepth cdot SM_m \n    SWC_m sim texttruncated(textLaplace(mu = SWC_sim b = textb_soilmoisture) text lower=0)\nendalign","category":"page"},{"location":"biodiversity_exploratories/likelihood/#Biomass","page":"Likelihood","title":"Biomass","text":"","category":"section"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"We calculate the likelihood of observing the measured biomass B_m given the simulated biomass B_sim (both in frackgha): ","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"    B_m sim texttruncated(textLaplace(mu = B_sim b = textb_biomass) text lower=0)","category":"page"},{"location":"biodiversity_exploratories/likelihood/#Community-weighted-mean-traits","page":"Likelihood","title":"Community weighted mean traits","text":"","category":"section"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"We can calculate community weighted mean traits from the observed community composition by weighting species mean trait values by their cover. In the same way, we can calculate community weighted mean traits for our simulated plant community (see here). Then, we can calculate the likelihood of observing the measured community weighted mean trait CWM_m (e.g. sla_m) given the simulated community weighted mean trait CWM_sim (e.g. sla_sim):","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"    CWM_m sim texttruncated(textLaplace(mu = CWM_sim b = b_cwm) text lower=0)","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"This can be done for all five traits that were part of the simulation model. All the traits have an own variance parameter (e.g. b_sla).","category":"page"},{"location":"biodiversity_exploratories/likelihood/#Downweighting-the-likelihood","page":"Likelihood","title":"Downweighting the likelihood","text":"","category":"section"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"In the calibration of the simulation model we want to give each part (biomass, soil water content, community weighted mean traits) an equal influence.","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"Measured soil moisture content is available with a daily resolution. The other data is available with a yearly resolution. Therefore, we downweight the likelihood of the soil moisture content by number of measurements per year n_SM.","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"Moreover, we downweight the likelihood of the community weighted mean traits by the number of traits n_traits.","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"In this process, we emulate a scenario where each of the three calibration aspects (biomass, soil water content, and community weighted mean traits) is measured only once per year.","category":"page"},{"location":"biodiversity_exploratories/likelihood/","page":"Likelihood","title":"Likelihood","text":"    textlog  mathcalL(theta mid x) = textlog mathcalL_B(theta mid x) + frac1n_SM cdot textlog mathcalL_SWC(theta mid x) + frac1n_traitscdot textlog mathcalL_CWM(theta mid x)","category":"page"},{"location":"all_functions/#Overview-of-all-functions","page":"TOC all functions","title":"Overview of all functions","text":"","category":"section"},{"location":"all_functions/","page":"TOC all functions","title":"TOC all functions","text":"","category":"page"},{"location":"model_io/#Model-inputs-and-outputs","page":"Model input and output","title":"Model inputs and outputs","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"CurrentModule = GrasslandTraitSim","category":"page"},{"location":"model_io/#Inputs","page":"Model input and output","title":"Inputs","text":"","category":"section"},{"location":"model_io/#climate_input","page":"Model input and output","title":"Daily abiotic conditions","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description used in\ntemperature Temperature [°C] temperature_reduction\ntemperature_sum Yearly cumulative temperature [°C] seasonal_reduction, seasonal_component_senescence\nprecipitation Precipitation [mm d⁻¹] change_water_reserve\nPAR Photosynthetically active radiation [MJ ha⁻¹ d⁻¹] potential_growth!, radiation_reduction\nPET Potential evapotranspiration [mm d⁻¹] water_reduction!, evaporation, transpiration","category":"page"},{"location":"model_io/#management_input","page":"Model input and output","title":"Daily management variables","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description used in\nmowing Height of mowing event, NaN means no mowing [m] mowing!\ngrazing Grazing intensity measured in livestock units, NaN means no grazing [LD ha⁻¹] grazing!, trampling!","category":"page"},{"location":"model_io/#Traits-of-the-plant-species","page":"Model input and output","title":"Traits of the plant species","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description used in\namc Arbuscular mycorrhizal colonisation rate [-] \nsla Specific leaf area [m² g⁻¹] \nheight Plant height [m] \nrsa_above Root surface area / aboveground biomass [m² g⁻¹] \nampm Aboveground biomass / total biomass [-] \nlmpm Leaf mass / total biomass [-] \nlncm Leaf nitrogen content per leaf mass [mg g⁻¹] ","category":"page"},{"location":"model_io/#site_input","page":"Model input and output","title":"Raw time invariant site variables","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description used in\nsand Sand content [%] input_WHC_PWP!\nsilt Silt content [%] input_WHC_PWP!\nclay Clay content [%] input_WHC_PWP!\nrootdepth Mean rooting depth of plants [mm] input_WHC_PWP!\nbulk Bulk density [g cm⁻³] input_WHC_PWP!\norganic Organic matter content [%] input_WHC_PWP!\ntotalN Total nitrogen [g kg⁻¹] input_nutrients!\nCNratio Carbon to nitrogen ratio [-] input_nutrients!","category":"page"},{"location":"model_io/#Derived-time-invariant-site-variables","page":"Model input and output","title":"Derived time invariant site variables","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description used in\nPWP[x, y] Permanent wilting point [mm] water_reduction!\nWHC[x, y] Water holding capacity [mm] water_reduction!\nnutindex[x, y] Nutrients index ranging from zero to one [-] nutrient_reduction!","category":"page"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"","category":"page"},{"location":"model_io/#Outputs","page":"Model input and output","title":"Outputs","text":"","category":"section"},{"location":"model_io/#Raw-outputs","page":"Model input and output","title":"Raw outputs","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description\nbiomass[t, x, y, species] Aboveground fresh green biomass [kg ha⁻¹]\nwater[t, x, y] Water reserve [mm]","category":"page"},{"location":"model_io/#Derived-outputs-(community-weighted-mean-traits)","page":"Model input and output","title":"Derived outputs (community weighted mean traits)","text":"","category":"section"},{"location":"model_io/","page":"Model input and output","title":"Model input and output","text":"Variable Description\nCWM_sla[t, x, y] Specific leaf area [m² g⁻¹]\nCWM_amc[t, x, y] Arbuscular mycorrhizal colonisation [-]\nCWM_trait[t, x, y] Root surface area / aboveground biomass [m² g⁻¹]\nCWM_height[t, x, y] Plant height [m]\nCWM_lncm[t, x, y] Leaf nitrogen / leaf mass [mg g⁻¹]","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/initialization/#Initialization","page":"Initialization","title":"Initialization","text":"","category":"section"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"The function initialization is called once at the beginning of the simulation.  The traits of the species are generated, the  parameters are initialized  and the initial conditions of the state variables  are set.","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"initialization","category":"page"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.initialization","page":"Initialization","title":"GrasslandTraitSim.initialization","text":"initialization(; input_obj, inf_p, calc, trait_input = nothing)\n\nInitialize the simulation object.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#Initialization-of-traits","page":"Initialization","title":"Initialization of traits","text":"","category":"section"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"random_traits!\nsimilarity_matrix!","category":"page"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.random_traits!","page":"Initialization","title":"GrasslandTraitSim.random_traits!","text":"random_traits!(; calc, input_obj)\n\nGenerate random traits for the simulation.\n\nThe traits are generated using a bivariate Gaussian mixture model with full covariance matrices. For each species either the first or the second Gaussian distribution is used to generate the log/logit-transformed traits. The traits are then backtransformed to the original scale and the units are added. If the proportion of the leaf mass of the total plant mass (lmpm) is larger than 0.95 % of the proportion of the aboveground mass of the total mass (ampm), lmpm is set to 0.95 % of ampm.\n\nThe Gaussian mixture model was fitted to the data with the function BayesianGaussianMixture of [7].\n\nOverview of the traits:\n\ntrait unit description transformation\nsla m² g⁻¹ specific   leaf area log\nheight m plant height log\nlncm mg g⁻¹ leaf nitrogen content per leaf dry mass log\nrsa_above m² g⁻¹ root surface area per aboveground biomass log\namc - arbuscular mycorrhizal colonisation rate logit\nampm - aboveground dry mass per plant dry mass logit\nlmpm - leaf dry mass per plant dry mass logit\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.similarity_matrix!","page":"Initialization","title":"GrasslandTraitSim.similarity_matrix!","text":"similarity_matrix!(; input_obj, calc)\n\nCalculates the similarity between plants concerning their investment in fine roots and collaboration with mycorrhiza.\n\nThe trait similarity is build with the traits root surface area per aboveground biomass (rsa_above) and the arbuscular mycorrhizal colonisation rate (amc).\n\nStandardized residuals are calculated for both traits:\n\ntextamc_resid =\n\nThe trait similarity between plant species i and plant species u for T traits is calculated as follows:\n\ntexttrait_similarity_iu =\n    1-fracsum_t=1^t=T\n        textscaled_trait_ti - textscaled_trait_tuT\n\nTo give each functional trait an equal influence, the trait values have been scaled by the 5 % (Q_005 t) and 95 % quantile (Q_095 t) of trait values of 100 plant species:\n\ntextscaled_trait_ti =\n    fractexttrait_ti - Q_005 t\n    Q_095 t - Q_005 t\n\nIf the rescaled trait values were below zero or above one, the values were set to zero or one respectively.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#Initialization-of-parameters","page":"Initialization","title":"Initialization of parameters","text":"","category":"section"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"Many parameters are given at the start the simulation. However, some parameters are dependent on input parameters and of the generated traits  and are initialized at the start of the simulation.","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"The species-specific parameters are:","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"μ: senescence rate [d⁻¹]","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"senescence_rate!","category":"page"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.senescence_rate!","page":"Initialization","title":"GrasslandTraitSim.senescence_rate!","text":"senescence_rate!(; calc, inf_p)\n\nIntialize the senescence rate based on the specific leaf area\n\nIn order to derive the senescence rate, the leaf life span is calculated first. The equation on how to derive the leaf life span based on the specific leaf area is taken from [5] and was fitted to the broad-leaved subset of the LEAVES data set (LEAVES/BROAD in Table 1 of [5]). The original equation calculates the leaf life span in months. The equation was converted to days.\n\nThen, the parameter beta_textsen is used to downscale the inverse of the leaf life span because the overall senescence rate of the aboveground biomass is lower than the inverse of the leaf life span:\n\nbeginalign\ntextleaflifespan = 10^(241 - log_10(textsla_conv))  038 cdot frac3652512 \nmu = textβ_sen cdot frac1textleaflifespan\nendalign\n\nsla_conv specific leaf area [cm²g⁻¹] rightarrow this includes a unit conversion of the sla values (in the model the unit of the specific leaf area is m² g⁻¹)\nleaflifespan leaf life span [d]\nμ senescence rate [d⁻¹] of the leaf span on the senescence rate μ\nβ_sen β value of a linear equation that models the influence of the leaf lifespan on the senescence rate μ\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"Initializing parameters for the functional response","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"The species-specific parameters are:","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"Initialization of patch-specific parameters","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"The patch specific parameters are: ","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"water holding capacity WHC [mm]\npermanent wilting point PWP [mm]\nnutrients [-]","category":"page"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"input_WHC_PWP!\ninput_nutrients!\nplanar_gradient!","category":"page"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.input_WHC_PWP!","page":"Initialization","title":"GrasslandTraitSim.input_WHC_PWP!","text":"input_WHC_PWP!(; calc, input_obj)\n\nDerive walter holding capacity (WHC) and permanent wilting point (PWP) from soil properties.\n\nbeginalign\n    θ₁ = a₁  textsand + b₁  textsilt + c₁  textclay +\n            d₁  textorganic + e₁  textbulk \n    textWHC = θ₁  textrootdepth \n    θ₂ = a₂  textsand + b₂  textsilt + c₂  textclay +\n            d₂  textorganic + e₂  textbulk \n    textPWP = θ₂  textrootdepth\nendalign\n\nEquation and coefficients are taken from [6]. The coefficients a, b, c, d and e differ for the water holding capacity (matrix potential Ψ = -0.07 bar) and the permanent wilting point (matrix potential Ψ = -15 bar). The empirical coefficients that were estimated by [6] can be seen in the folling table:\n\nΨ [bar] a b c d e\n-0.07 0.005678 0.009228 0.009135 0.006103 -0.2696\n-15 -5.9e-5 0.001142 0.005766 0.002228 0.02671\n\nsand: sand content [%]\nsilt: silt content [%]\nclay: clay content [%]\nbulk: bulk density [g cm⁻³]\norganic: organic matter content [%]\nrootdepth: rooting depth [mm]\nθ: water content [cm³ cm⁻³]\nWHC: water holding capacity [mm]\nPWP: permanent wilting point [mm]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.input_nutrients!","page":"Initialization","title":"GrasslandTraitSim.input_nutrients!","text":"input_nutrients!(; calc, input_obj, inf_p, nutheterog, totalN, CNratio)\n\nDerive a nutrient index by combining total nitrogen and carbon to nitrogen ratio.\n\nbeginalign*\ntextCN_scaled = fractextCNratio - textminCNratio\n                    textmaxCNratio - textminCN_ratio \ntexttotalN_scaled = fractexttotalN - textmintotalN\n                        textmaxtotalN - textmintotalN \ntextnutrients = frac11 + exp(-texttotalN_β  texttotalN_scaled\n                                     -textCN_β  textCN_scaled¹)\nendalign*\n\nCNratio: carbon to nitrogen ratio [-]\ntotalN: total nitrogen [g kg⁻¹]\nminCNratio: minimum carbon to nitrogen ratio [-]\nmaxCNratio: maximum carbon to nitrogen ratio [-]\nmintotalN: minimum total nitrogen [g kg⁻¹]\nmaxtotalN: maximum total nitrogen [g kg⁻¹]\ntotalN_β: scaling parameter for total nitrogen [-]\nCN_β: scaling parameter for carbon to nitrogen ratio [-]\nnutrients: nutrient index [-]\n\nAdditionally if more than one patch is simulated a gradient of nutrients can be added and the last equations changes to:\n\ntextnutrients = frac11 + exp(-texttotalN_β  texttotalN_scaled\n                                    -textCN_β  textCN_scaled¹\n                                    -textnutheterog * (textnutgradient - 05))\n\nnutheterog: heterogeneity of nutrients [-]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.planar_gradient!","page":"Initialization","title":"GrasslandTraitSim.planar_gradient!","text":"planar_gradient!(; mat, direction)\n\nHelper function to fill a matrix with a gradient with values from 0 to 1.\n\nThe direction controls the direction of the gradient.\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/initialization/#Set-the-initial-conditions-of-the-state-variables","page":"Initialization","title":"Set the initial conditions of the state variables","text":"","category":"section"},{"location":"Modelling_API/initialization/","page":"Initialization","title":"Initialization","text":"set_initialconditions!","category":"page"},{"location":"Modelling_API/initialization/#GrasslandTraitSim.set_initialconditions!","page":"Initialization","title":"GrasslandTraitSim.set_initialconditions!","text":"set_initialconditions!(; container)\n\nSet the initial conditions for the state variables.\n\nEach plant species (u_biomass) gets an equal share of the initial biomass (initbiomass). The soil water content (u_water) is set to 180 mm.\n\nu_biomass: state variable biomass [kg ha⁻¹]\nu_water: state variable soil water content [mm]\ninitbiomass: initial biomass [kg ha⁻¹]\ninitsoilwater: initial soil water content [mm]\n\n\n\n\n\n","category":"function"},{"location":"biodiversity_exploratories/priors/#Priors","page":"Priors","title":"Priors","text":"","category":"section"},{"location":"biodiversity_exploratories/priors/","page":"Priors","title":"Priors","text":"using CairoMakie\nusing Statistics\nusing Distributions\nimport GrasslandTraitSim.Valid as valid\nimport GrasslandTraitSim as sim\n\n## the input object specifies which processes are included\n## here we include all processes\ninput_obj = valid.validation_input(;\n    plotID = \"HEG01\", nspecies = 1);\ninference_obj = sim.calibrated_parameter(; input_obj)\n\n\nbegin\n    fig = Figure(; size = (600, 6000))\n\n    for (i,p) in enumerate(keys(inference_obj.priordists))\n        Axis(fig[i, 1]; title = String(p))\n\n        d = inference_obj.priordists[p]\n        ma = quantile(d, 0.995)\n        x = LinRange(0.000001, ma, 200)\n        y = pdf.(d, x)\n        band!(x, zeros(200), y; color = (:red, 0.3))\n        lines!(x, y; color = :black, linewidth = 2)\n    end\n\n    fig\nend","category":"page"},{"location":"Modelling_API/clonalgrowth/","page":"Clonal growth","title":"Clonal growth","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/clonalgrowth/#Clonal-growth","page":"Clonal growth","title":"Clonal growth","text":"","category":"section"},{"location":"Modelling_API/clonalgrowth/","page":"Clonal growth","title":"Clonal growth","text":"clonalgrowth!","category":"page"},{"location":"Modelling_API/clonalgrowth/#GrasslandTraitSim.clonalgrowth!","page":"Clonal growth","title":"GrasslandTraitSim.clonalgrowth!","text":"clonalgrowth!(; container)\n\nYearly clonal growth.\n\nbeginalign\ntextgrowth_factor = frac005textnneighbours \ntextcrowded_factor =\n    min(fractextmsurrounded_biomasstextbiomass_target 20) \ntextclonalgrowth =\n    textgrowth_factor cdot textcrowded_factor cdot textbiomass \nendalign\n\nThe biomass is transferred from the home patch to the neighbour (target) patches. This is done for all patches once per year.\n\nclonalgrowth: biomass that is transferred from the home to the target patch [kg ha⁻¹]\nnneighbours: number of neighbour patches of the home patch. For a grid this  value lies between 2 (edge) and 4 (middle).\nmsurrounded_biomass: mean biomass of the home and the  (upto 4) neighbour patches [kg ha⁻¹]\nbiomass_target: biomass of the target patch [kg ha⁻¹]\ngrowth_factor: proportion of biomass that is transferred from the home  patch to one neighbour patch. This factor is modified by the crowded_factor [-]\ncrowded_factor: factor to adapth clonal growth based on the biomass distribution   of the patches in the direct surroundings. The value lies between 0   (no clonal growth due to high surrounded biomass) and   2 (high clonal growth due to high own biomass).\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"References/","page":"References","title":"References","text":"Acknowledgement\nWe thank the managers of the three Exploratories, Max Müller, Julia Bass, Robert Künast, Miriam Teuscher, Anna K. Franke, Franca Marian and all former managers for their work in maintaining the plot and project infrastructure; Victoria Grießmeier for giving support through the central office, Andreas Ostrowski for managing the central data base, and Markus Fischer, Eduard Linsenmair, Dominik Hessenmöller, Daniel Prati, Ingo Schöning, François Buscot, Ernst-Detlef Schulze, Wolfgang W. Weisser and the late Elisabeth Kalko for their role in setting up the Biodiversity Exploratories project. We thank the administration of the Hainich national park, the UNESCO Biosphere Reserve Swabian Alb and the UNESCO Biosphere Reserve Schorfheide-Chorin as well as all land owners for the excellent collaboration. The work has been (partly) funded by the DFG Priority Program 1374 \"Biodiversity-Exploratories\". Field work permits were issued by the responsible state environmental offices of Baden-Württemberg, Thüringen, and Brandenburg.","category":"page"},{"location":"References/","page":"References","title":"References","text":"References","category":"page"},{"location":"References/","page":"References","title":"References","text":"I. Schöning, E. Solly, T. Klötzing, S. Trumbore and M. Schrumpf. MinSoil 2011 - Soil Carbon and Nitrogen Concentrations (2021). Dataset ID: 14446.\n\n\n\nI. Schöning, S. Trumbore, M. Schrumpf, T. Klötzing and H. Y. Gan. MinSoil 2014 - Soil Carbon and Nitrogen Concentrations (2021). Dataset ID: 18787.\n\n\n\nI. Schöning, T. Klötzing, A. Apostolakis, S. Trumbore and M. Schrumpf. MinSoil 2017 - Soil Carbon and Nitrogen Concentrations (2021). Dataset ID: 23846.\n\n\n\nI. Schöning and A. Apostolakis. Soil sampling campaign 2021, all experimental plots (EP), 0-10 cm  - carbon and nitrogen concentrations (2023). Dataset ID: 31210.\n\n\n\nP. B. Reich, M. B. Walters and D. S. Ellsworth. Leaf Life-Span in Relation to Leaf, Plant, and Stand Characteristics among Diverse Ecosystems. Ecological Monographs 62, 365–392 (1992).\n\n\n\nS. C. Gupta and W. E. Larson. Estimating soil water retention characteristics from particle size distribution, organic matter percent, and bulk density. Water Resources Research 15, 1633–1635 (1979).\n\n\n\nF. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Passos, D. Cournapeau, M. Brucher, M. Perrot and E. Duchesnay. Scikit-learn: Machine Learning in Python. Journal of Machine Learning Research 12, 2825–2830 (2011).\n\n\n\nM. Jouven, P. Carrere and R. Baumont. Model predicting dynamics of biomass,  structure and digestibility of herbage in managed permanent pastures. 1. Model description. Grass and Forage Science 61, 112–124 (2006).\n\n\n\nA. Schapendonk, W. Stol, D. Kraalingen and B. Bouman. LINGRA,  a sink/source model to simulate grassland productivity in Europe. European Journal of Agronomy 9, 87–100 (1998).\n\n\n\nT. Moulin, A. Perasso, P. Calanca and F. Gillet. DynaGraM: A process-based model to simulate multi-species plant community dynamics in managed grasslands. Ecological Modelling 439, 109345 (2021).\n\n\n\nF. Gillet. Modelling vegetation dynamics in heterogeneous pasture-woodland landscapes. Ecological Modelling 217, 1–18 (2008).\n\n\n\nS. Wöllauer, F. Hänsel, T. Nauss and S. Forteva. Climate data - Time Series Web Interface (2023). Dataset ID: 19007.\n\n\n\nD. Wang. MODIS/Terra+Aqua Photosynthetically Active Radiation Daily/3-Hour L3 Global 0.05Deg CMG V061 (2021). NASA EOSDIS Land Processes Distributed Active Archive Center. Accessed on 09.03.2023.\n\n\n\nCalculated daily values for different characteristic elements of soil and crops. (2019). DWD Climate Data Center. Version v19.3. Accessed on 09.03.2023.\n\n\n\nJ. Vogt, W. Weisser, M. Ayasse, M. Fischer, U. Schumacher, C. Schreiber, R. Lauterbach, A. Franke, A. Ostrowski and M. Teuscher. Land use in grasslands: raw data of yearly owner interviews (2023). Dataset ID: 26487.\n\n\n\nI. Schöning, E. Solly, T. Klötzing, S. Trumbore and M. Schrumpf. MinSoil 2011 - Soil Texture (2021). Dataset ID: 14686.\n\n\n\nN. Herold, I. Schöning and M. Schrumpf. Soil Survey 2008 Subplot Description (2021). Dataset ID: 4761.\n\n\n\nI. Schöning, E. Solly, T. Klötzing, S. Trumbore and M. Schrumpf. MinSoil 2011 - Soil Bulk Density and Carbon and Nitrogen stocks (2021). Dataset ID: 17086.\n\n\n\nS. Boch, J. Mueller, S. Socher, D. Prati and M. Fischer. Measurement of biomass (2009, all grassland EPs) (2017). Dataset ID: 16209.\n\n\n\nB. Schmitt, D. Prati and M. Fischer. Measurement of biomass (2010, all grassland EPs) (2017). Dataset ID: 12706.\n\n\n\nB. Schmitt, D. Prati, M. Fischer and J. Minker. Measurement of biomass (2011, all grassland EPs) (2018). Dataset ID: 14346.\n\n\n\nB. Schmitt and M. Fischer. Vegetation Records for Grassland EPs in 2012, Header Data without Species Identities (2018). Dataset ID: 15588.\n\n\n\nB. Schmitt, D. Prati and M. Fischer. Vegetation Records for Grassland EPs in 2013, Header Data without Species Identities (2018). Dataset ID: 16826.\n\n\n\nM. Fischer, J. Hinderling, D. Schäfer, V. Klaus and J. Hinderling. Vegetation Records for 150 Grassland EPs in 2014, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 19807.\n\n\n\nM. Fischer, J. Hinderling, D. Schäfer, V. Klaus and J. Hinderling. Vegetation Records for 150 Grassland EPs in 2015, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 19809.\n\n\n\nM. Fischer, D. Schäfer, S. Boch and D. Prati. Vegetation Records for 150 Grassland EPs in 2016, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 21187.\n\n\n\nD. Schäfer, D. Prati and M. Fischer. Vegetation Records for 150 Grassland EPs in 2017, Header Data without Species Identities (incl. biomass) - Updated Version available (Dataset 31466) (2023). Dataset ID: 23486.\n\n\n\nR. Bolliger, J. Hinderling, D. Prati and J. Hinderling. Vegetation Records for 150 Grassland EPs in 2018, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 24166.\n\n\n\nM. Fischer, J. Hinderling, R. Bolliger and J. Hinderling. Vegetation Records for 150 Grassland EPs in 2019, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 26151.\n\n\n\nR. Bolliger, D. Prati, M. Fischer and J. Hinderling. Vegetation Records for 150 Grassland EPs in 2020, Header Data without Species Identities (incl. biomass) (2023). Dataset ID: 27426.\n\n\n\nD. Prati and R. Bolliger. Vegetation summary and biomass data for 150 grassland EPs in 2021 without species identities (2023). Dataset ID: 31180.\n\n\n\nD. Prati. Vegetation summary and biomass data for 150 grassland EPs in 2022 without species identities (2023). Dataset ID: 31387.\n\n\n\nJ. Hinderling and S. Keller. Vegetation records for grassland EPs, 2008 - 2022 (2023). Dataset ID: 31389.\n\n\n\nD. Prati, S. Socher, S. Boch, J. Mueller and M. Fischer. Vegetation Records for Grassland EPs in 2009, Header Data without Species Identities (2017). Dataset ID: 6340.\n\n\n\nB. Schmitt, D. Prati, M. Fischer and S. Blaser. Vegetation Records for Grassland EPs in 2010, Header Data without Species Identities (2017). Dataset ID: 13486.\n\n\n\nB. Schmitt, D. Prati and M. Fischer. Vegetation Records for Grassland EPs in 2011, Header Data without Species Identities (2018). Dataset ID: 14326.\n\n\n\nD. Prati, M. Goßner and F. Neff. Leaf traits of most abundant plant species from all EPs, 2017/2018 (2021). Dataset ID: 24807.\n\n\n\nJ. Bergmann and M. Rillig. Fine root and mycorrhizal traits of 82 grassland species measured in a greenhouse experiment on sand, 2018 (2022). Dataset ID: 26546.\n\n\n\nJ. Kattge, G. Bönisch, S. Díaz, S. Lavorel, I. C. Prentice, P. Leadley, S. Tautenhahn, G. D. Werner, T. Aakala, M. Abedi, A. T. Acosta, G. C. Adamidis, K. Adamson, M. Aiba, C. H. Albert, J. M. Alcántara, C. Alcázar C, I. Aleixo, H. Ali, B. Amiaud, C. Ammer, M. M. Amoroso, M. Anand, C. Anderson, N. Anten, J. Antos, D. M. Apgaua, T.-L. Ashman, D. H. Asmara, G. P. Asner, M. Aspinwall, O. Atkin, I. Aubin, L. Baastrup-Spohr, K. Bahalkeh, M. Bahn, T. Baker, W. J. Baker, J. P. Bakker, D. Baldocchi, J. Baltzer, A. Banerjee, A. Baranger, J. Barlow, D. R. Barneche, Z. Baruch, D. Bastianelli, J. Battles, W. Bauerle, M. Bauters, E. Bazzato, M. Beckmann, H. Beeckman, C. Beierkuhnlein, R. Bekker, G. Belfry, M. Belluau, M. Beloiu, R. Benavides, L. Benomar, M. L. Berdugo-Lattke, E. Berenguer, R. Bergamin, J. Bergmann, M. Bergmann Carlucci, L. Berner, M. Bernhardt-Römermann, C. Bigler, A. D. Bjorkman, C. Blackman, C. Blanco, B. Blonder, D. Blumenthal, K. T. Bocanegra-González, P. Boeckx, S. Bohlman, K. Böhning-Gaese, L. Boisvert-Marsh, W. Bond, B. Bond-Lamberty, A. Boom, C. C. Boonman, K. Bordin, E. H. Boughton, V. Boukili, D. M. Bowman, S. Bravo, M. R. Brendel, M. R. Broadley, K. A. Brown, H. Bruelheide, F. Brumnich, H. H. Bruun, D. Bruy, S. W. Buchanan, S. F. Bucher, N. Buchmann, R. Buitenwerf, D. E. Bunker, J. Bürger, S. Burrascano, D. F. Burslem, B. J. Butterfield, C. Byun, M. Marques, M. C. Scalon, M. Caccianiga, M. Cadotte, M. Cailleret, J. Camac, J. J. Camarero, C. Campany, G. Campetella, J. A. Campos, L. Cano-Arboleda, R. Canullo, M. Carbognani, F. Carvalho, F. Casanoves, B. Castagneyrol, J. A. Catford, J. Cavender-Bares, B. E. Cerabolini, M. Cervellini, E. Chacón-Madrigal, K. Chapin, F. S. Chapin, S. Chelli, S.-C. Chen, A. Chen, P. Cherubini, F. Chianucci, B. Choat, K.-S. Chung, M. Chytrý, D. Ciccarelli, L. Coll, C. G. Collins, L. Conti, D. Coomes, J. H. Cornelissen, W. K. Cornwell, P. Corona, M. Coyea, J. Craine, D. Craven, J. P. Cromsigt, A. Csecserits, K. Cufar, M. Cuntz, A. C. da Silva, K. M. Dahlin, M. Dainese, I. Dalke, M. Dalle Fratte, A. T. Dang-Le, J. Danihelka, M. Dannoura, S. Dawson, A. J. de Beer, A. De Frutos, J. R. De Long, B. Dechant, S. Delagrange, N. Delpierre, G. Derroire, A. S. Dias, M. H. Diaz-Toribio, P. G. Dimitrakopoulos, M. Dobrowolski, D. Doktor, P. Dřevojan, N. Dong, J. Dransfield, S. Dressler, L. Duarte, E. Ducouret, S. Dullinger, W. Durka, R. Duursma, O. Dymova, A. E-Vojtkó, R. L. Eckstein, H. Ejtehadi, J. Elser, T. Emilio, K. Engemann, M. B. Erfanian, A. Erfmeier, A. Esquivel-Muelbert, G. Esser, M. Estiarte, T. F. Domingues, W. F. Fagan, J. Fagúndez, D. S. Falster, Y. Fan, J. Fang, E. Farris, F. Fazlioglu, Y. Feng, F. Fernandez-Mendez, C. Ferrara, J. Ferreira, A. Fidelis, B. Finegan, J. Firn, T. J. Flowers, D. F. Flynn, V. Fontana, E. Forey, C. Forgiarini, L. François, M. Frangipani, D. Frank, C. Frenette-Dussault, G. T. Freschet, E. L. Fry, N. M. Fyllas, G. G. Mazzochini, S. Gachet, R. Gallagher, G. Ganade, F. Ganga, P. García-Palacios, V. Gargaglione, E. Garnier, J. L. Garrido, A. L. de Gasper, G. Gea-Izquierdo, D. Gibson, A. N. Gillison, A. Giroldo, M.-C. Glasenhardt, S. Gleason, M. Gliesch, E. Goldberg, B. Göldel, E. Gonzalez-Akre, J. L. Gonzalez-Andujar, A. González-Melo, A. González-Robles, B. J. Graae, E. Granda, S. Graves, W. A. Green, T. Gregor, N. Gross, G. R. Guerin, A. Günther, A. G. Gutiérrez, L. Haddock, A. Haines, J. Hall, A. Hambuckers, W. Han, S. P. Harrison, W. Hattingh, J. E. Hawes, T. He, P. He, J. M. Heberling, A. Helm, S. Hempel, J. Hentschel, B. Hérault, A.-M. Hereş, K. Herz, M. Heuertz, T. Hickler, P. Hietz, P. Higuchi, A. L. Hipp, A. Hirons, M. Hock, J. A. Hogan, K. Holl, O. Honnay, D. Hornstein, E. Hou, N. Hough-Snee, K. A. Hovstad, T. Ichie, B. Igić, E. Illa, M. Isaac, M. Ishihara, L. Ivanov, L. Ivanova, C. M. Iversen, J. Izquierdo, R. B. Jackson, B. Jackson, H. Jactel, A. M. Jagodzinski, U. Jandt, S. Jansen, T. Jenkins, A. Jentsch, J. R. Jespersen, G.-F. Jiang, J. L. Johansen, D. Johnson, E. J. Jokela, C. A. Joly, G. J. Jordan, G. S. Joseph, D. Junaedi, R. R. Junker, E. Justes, R. Kabzems, J. Kane, Z. Kaplan, T. Kattenborn, L. Kavelenova, E. Kearsley, A. Kempel, T. Kenzo, A. Kerkhoff, M. I. Khalil, N. L. Kinlock, W. D. Kissling, K. Kitajima, T. Kitzberger, R. Kjøller, T. Klein, M. Kleyer, J. Klimešová, J. Klipel, B. Kloeppel, S. Klotz, J. M. Knops, T. Kohyama, F. Koike, J. Kollmann, B. Komac, K. Komatsu, C. König, N. J. Kraft, K. Kramer, H. Kreft, I. Kühn, D. Kumarathunge, J. Kuppler, H. Kurokawa, Y. Kurosawa, S. Kuyah, J.-P. Laclau, B. Lafleur, E. Lallai, E. Lamb, A. Lamprecht, D. J. Larkin, D. Laughlin, Y. Le Bagousse-Pinguet, G. le Maire, P. C. le Roux, E. le Roux, T. Lee, F. Lens, S. L. Lewis, B. Lhotsky, Y. Li, X. Li, J. W. Lichstein, M. Liebergesell, J. Y. Lim, Y.-S. Lin, J. C. Linares, C. Liu, D. Liu, U. Liu, S. Livingstone, J. Llusià, M. Lohbeck, Á. López-García, G. Lopez-Gonzalez, Z. Lososová, F. Louault, B. A. Lukács, P. Lukeš, Y. Luo, M. Lussu, S. Ma, C. Maciel Rabelo Pereira, M. Mack, V. Maire, A. Mäkelä, H. Mäkinen, A. C. Malhado, A. Mallik, P. Manning, S. Manzoni, Z. Marchetti, L. Marchino, V. Marcilio-Silva, E. Marcon, M. Marignani, L. Markesteijn, A. Martin, C. Martínez-Garza, J. Martínez-Vilalta, T. Mašková, K. Mason, N. Mason, T. J. Massad, J. Masse, I. Mayrose, J. McCarthy, M. L. McCormack, K. McCulloh, I. R. McFadden, B. J. McGill, M. Y. McPartland, J. S. Medeiros, B. Medlyn, P. Meerts, Z. Mehrabi, P. Meir, F. P. Melo, M. Mencuccini, C. Meredieu, J. Messier, I. Mészáros, J. Metsaranta, S. T. Michaletz, C. Michelaki, S. Migalina, R. Milla, J. E. Miller, V. Minden, R. Ming, K. Mokany, A. T. Moles, A. Molnár V, J. Molofsky, M. Molz, R. A. Montgomery, A. Monty, L. Moravcová, A. Moreno-Martínez, M. Moretti, A. S. Mori, S. Mori, D. Morris, J. Morrison, L. Mucina, S. Mueller, C. D. Muir, S. C. Müller, F. Munoz, I. H. Myers-Smith, R. W. Myster, M. Nagano, S. Naidu, A. Narayanan, B. Natesan, L. Negoita, A. S. Nelson, E. L. Neuschulz, J. Ni, G. Niedrist, J. Nieto, Ü. Niinemets, R. Nolan, H. Nottebrock, Y. Nouvellon, A. Novakovskiy, T. N. Network, K. O. Nystuen, A. O'Grady, K. O'Hara, A. O'Reilly-Nugent, S. Oakley, W. Oberhuber, T. Ohtsuka, R. Oliveira, K. Öllerer, M. E. Olson, V. Onipchenko, Y. Onoda, R. E. Onstein, J. C. Ordonez, N. Osada, I. Ostonen, G. Ottaviani, S. Otto, G. E. Overbeck, W. A. Ozinga, A. T. Pahl, C. E. Paine, R. J. Pakeman, A. C. Papageorgiou, E. Parfionova, M. Pärtel, M. Patacca, S. Paula, J. Paule, H. Pauli, J. G. Pausas, B. Peco, J. Penuelas, A. Perea, P. L. Peri, A. C. Petisco-Souza, A. Petraglia, A. M. Petritan, O. L. Phillips, S. Pierce, V. D. Pillar, J. Pisek, A. Pomogaybin, H. Poorter, A. Portsmuth, P. Poschlod, C. Potvin, D. Pounds, A. S. Powell, S. A. Power, A. Prinzing, G. Puglielli, P. Pyšek, V. Raevel, A. Rammig, J. Ransijn, C. A. Ray, P. B. Reich, M. Reichstein, D. E. Reid, M. Réjou-Méchain, V. R. de Dios, S. Ribeiro, S. Richardson, K. Riibak, M. C. Rillig, F. Riviera, E. M. Robert, S. Roberts, B. Robroek, A. Roddy, A. V. Rodrigues, A. Rogers, E. Rollinson, V. Rolo, C. Römermann, D. Ronzhina, C. Roscher, J. A. Rosell, M. F. Rosenfield, C. Rossi, D. B. Roy, S. Royer-Tardif, N. Rüger, R. Ruiz-Peinado, S. B. Rumpf, G. M. Rusch, M. Ryo, L. Sack, A. Saldaña, B. Salgado-Negret, R. Salguero-Gomez, I. Santa-Regina, A. C. Santacruz-García, J. Santos, J. Sardans, B. Schamp, M. Scherer-Lorenzen, M. Schleuning, B. Schmid, M. Schmidt, S. Schmitt, J. V. Schneider, S. D. Schowanek, J. Schrader, F. Schrodt, B. Schuldt, F. Schurr, G. Selaya Garvizu, M. Semchenko, C. Seymour, J. C. Sfair, J. M. Sharpe, C. S. Sheppard, S. Sheremetiev, S. Shiodera, B. Shipley, T. A. Shovon, A. Siebenkäs, C. Sierra, V. Silva, M. Silva, T. Sitzia, H. Sjöman, M. Slot, N. G. Smith, D. Sodhi, P. Soltis, D. Soltis, B. Somers, G. Sonnier, M. V. Sørensen, E. E. Sosinski Jr, N. A. Soudzilovskaia, A. F. Souza, M. Spasojevic, M. G. Sperandii, A. B. Stan, J. Stegen, K. Steinbauer, J. G. Stephan, F. Sterck, D. B. Stojanovic, T. Strydom, M. L. Suarez, J.-C. Svenning, I. Svitková, M. Svitok, M. Svoboda, E. Swaine, N. Swenson, M. Tabarelli, K. Takagi, U. Tappeiner, R. Tarifa, S. Tauugourdeau, C. Tavsanoglu, M. te Beest, L. Tedersoo, N. Thiffault, D. Thom, E. Thomas, K. Thompson, P. E. Thornton, W. Thuiller, L. Tichý, D. Tissue, M. G. Tjoelker, D. Y. Tng, J. Tobias, P. Török, T. Tarin, J. M. Torres-Ruiz, B. Tóthmérész, M. Treurnicht, V. Trivellone, F. Trolliet, V. Trotsiuk, J. L. Tsakalos, I. Tsiripidis, N. Tysklind, T. Umehara, V. Usoltsev, M. Vadeboncoeur, J. Vaezi, F. Valladares, J. Vamosi, P. M. van Bodegom, M. van Breugel, E. Van Cleemput, M. van de Weg, S. van der Merwe, F. van der Plas, M. T. van der Sande, M. van Kleunen, K. Van Meerbeek, M. Vanderwel, K. A. Vanselow, A. Vårhammar, L. Varone, M. Y. Vasquez Valderrama, K. Vassilev, M. Vellend, E. J. Veneklaas, H. Verbeeck, K. Verheyen, A. Vibrans, I. Vieira, J. Villacís, C. Violle, P. Vivek, K. Wagner, M. Waldram, A. Waldron, A. P. Walker, M. Waller, G. Walther, H. Wang, F. Wang, W. Wang, H. Watkins, J. Watkins, U. Weber, J. T. Weedon, L. Wei, P. Weigelt, E. Weiher, A. W. Wells, C. Wellstein, E. Wenk, M. Westoby, A. Westwood, P. J. White, M. Whitten, M. Williams, D. E. Winkler, K. Winter, C. Womack, I. J. Wright, S. J. Wright, J. Wright, B. X. Pinho, F. Ximenes, T. Yamada, K. Yamaji, R. Yanai, N. Yankov, B. Yguel, K. J. Zanini, A. E. Zanne, D. Zelený, Y.-P. Zhao, J. Zheng, J. Zheng, K. Ziemińska, C. R. Zirbel, G. Zizka, I. C. Zo-Bi, G. Zotz and C. Wirth. TRY plant trait database – enhanced coverage and open access. Global Change Biology 26, 119–188 (2020).\n\n\n\n","category":"page"},{"location":"tutorials/how_to_analyse_output/#How-to-analyse-the-model-output","page":"Analyse model output","title":"How to analyse the model output","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"I assume that you have read the tutorial on how to prepare the input data and run a simulation (see here). In this tutorial, we will analyse the output of the simulation that is stored in the object sol.","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"import GrasslandTraitSim as sim\nimport GrasslandTraitSim.Valid as valid\n\nusing Statistics\nusing CairoMakie\nusing Unitful\n\ninput_obj = valid.validation_input(;\n    plotID = \"HEG01\", nspecies = 25,\n    trait_seed = 99);\np = sim.parameter(; input_obj);\nsol = sim.solve_prob(; input_obj, p)","category":"page"},{"location":"tutorials/how_to_analyse_output/#Biomass","page":"Analyse model output","title":"Biomass","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"We can look at the simulated biomass:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"sol.output.biomass","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"The four dimension of the array are: daily time step, patch x dim, patch y dim, and species.  For plotting the values with Makie.jl, we have to remove the units with ustrip:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"# if we have more than one patch per site, we have to first calculate the mean biomass per site\nspecies_biomass = dropdims(mean(sol.output.biomass; dims = (:x, :y)); dims = (:x, :y))\ntotal_biomass = vec(sum(species_biomass; dims = :species))\n\nlines(sol.numeric_date, ustrip.(total_biomass), color = :darkgreen, linewidth = 2;\n      axis = (; ylabel = \"Aboveground dry biomass [kg ha⁻¹]\", \n                xlabel = \"Date [year]\"))","category":"page"},{"location":"tutorials/how_to_analyse_output/#Share-of-each-species","page":"Analyse model output","title":"Share of each species","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"We can look at the share of each species over time:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"# colors are assigned according to the specific leaf area (SLA)\ncolor = ustrip.(sol.traits.sla)\ncolormap = :viridis\ncolorrange = (minimum(color), maximum(color))\nis = sortperm(color)\ncmap = cgrad(colormap)\ncolors = [cmap[(co .- colorrange[1]) ./ (colorrange[2] - colorrange[1])]\n          for co in color[is]]\n\n# calculate biomass proportion of each species\nbiomass_site = dropdims(mean(sol.output.biomass; dims=(:x, :y)); dims = (:x, :y))\nbiomass_ordered = biomass_site[:, sortperm(color)]\nbiomass_fraction = biomass_ordered ./ sum(biomass_ordered; dims = :species)\nbiomass_cumfraction = cumsum(biomass_fraction; dims = 2)\n\nbegin\n    fig = Figure()\n    Axis(fig[1,1]; ylabel = \"Relative proportion of biomass of the species\", \n         xlabel = \"Date [year]\",\n         limits = (sol.numeric_date[1], sol.numeric_date[end], 0, 1))\n\n    for i in 1:sol.simp.nspecies\n        ylower = nothing\n        if i == 1\n            ylower = zeros(size(biomass_cumfraction, 1))\n        else\n            ylower = biomass_cumfraction[:, i-1]\n        end\n        yupper = biomass_cumfraction[:, i]\n\n        band!(sol.numeric_date, vec(ylower), vec(yupper);\n              color = colors[i])\n    end\n\n    Colorbar(fig[1,2]; limits = colorrange, colormap = cmap, \n             label = \"Specific leaf area [m² g⁻¹]\")\n\n    fig\nend","category":"page"},{"location":"tutorials/how_to_analyse_output/#Soil-water-content","page":"Analyse model output","title":"Soil water content","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"Similarly, we plot the soil water content over time:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"# if we have more than one patch per site, \n# we have to first calculate the mean soil water content per site\nsoil_water_per_site = dropdims(mean(sol.output.water; dims = (:x, :y)); dims = (:x, :y))\n\nlines(sol.numeric_date, ustrip.(soil_water_per_site), color = :blue, linewidth = 2;\n      axis = (; ylabel = \"Soil water content [mm]\", xlabel = \"Date [year]\"))","category":"page"},{"location":"tutorials/how_to_analyse_output/#Community-weighted-mean-traits","page":"Analyse model output","title":"Community weighted mean traits","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"We can calculate for all traits the community weighted mean over time:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"relative_biomass = species_biomass ./ total_biomass\ntraits = [:height, :sla, :lncm, :rsa_above, :amc, :ampm, :lmpm]\ntrait_names = [\n    \"Potential\\n height [m]\", \"Specific leaf\\narea [m² g⁻¹]\", \"Leaf nitrogen \\nper leaf mass\\n [mg g⁻¹]\",\n    \"Root surface\\narea per above\\nground biomass\\n[m² g⁻¹]\", \"Arbuscular\\n mycorrhizal\\n colonisation\",\n    \"Aboveground\\nbiomass per total\\nbiomass [-]\", \"Leaf biomass\\nper total \\nbiomass [-]\"]\n\nbegin\n    fig = Figure(; size = (500, 1000))\n\n    for i in eachindex(traits)\n        trait_vals = sol.traits[traits[i]]\n        weighted_trait = trait_vals .* relative_biomass'\n        cwm_trait = vec(sum(weighted_trait; dims = 1))\n\n        Axis(fig[i, 1];\n                xlabel = i == length(traits) ? \"Date [year]\" : \"\",\n                xticklabelsvisible = i == length(traits) ? true : false,\n                ylabel = trait_names[i])\n        lines!(sol.numeric_date, ustrip.(cwm_trait);\n                color = :black, linewidth = 2)\n        \n    end\n    \n    [rowgap!(fig.layout, i, 5) for i in 1:length(traits)-1]\n    \n    fig\nend","category":"page"},{"location":"tutorials/how_to_analyse_output/#Grazed-and-mown-biomass","page":"Analyse model output","title":"Grazed and mown biomass","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"We can look at the grazed and mown biomass over time:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"# total \nsum(sol.output.mown)\nsum(sol.output.grazed)\n\n# plot the grazed and mown biomass over time\ngrazed_site = dropdims(mean(sol.output.grazed; dims=(:x, :y, :species)); dims=(:x, :y, :species))\ncum_grazed = cumsum(grazed_site)\n\nmown_site = dropdims(mean(sol.output.mown; dims=(:x, :y, :species)); dims=(:x, :y, :species))\ncum_mown = cumsum(mown_site)\nbegin\n      fig = Figure()\n      Axis(fig[1,1]; ylabel = \"Cummulative grazed\\nbiomass [kg ha⁻¹]\")\n      lines!(sol.numeric_date, ustrip.(vec(cum_grazed)), color = :black, linewidth = 2;)\n      Axis(fig[2,1]; ylabel = \"Cummulative mown\\nbiomass [kg ha⁻¹]\", xlabel = \"Date [year]\")\n      lines!(sol.numeric_date, ustrip.(vec(cum_mown)), color = :black, linewidth = 2;)\n      fig\nend","category":"page"},{"location":"tutorials/how_to_analyse_output/#Shannon-and-Simpson-diversity","page":"Analyse model output","title":"Shannon and Simpson diversity","text":"","category":"section"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"We can calculate the Shannon and Simpson diversity over time:","category":"page"},{"location":"tutorials/how_to_analyse_output/","page":"Analyse model output","title":"Analyse model output","text":"biomass_site = dropdims(mean(sol.output.biomass; dims = (:x, :y)); dims = (:x, :y))\ntend = size(biomass_site, 1)\nshannon = Array{Float64}(undef, tend)\nsimpson = Array{Float64}(undef, tend)\nfor t in 1:tend\n    b1 = biomass_site[t, :]\n    b1 = b1[.!iszero.(b1)]\n    p1 = b1 ./ sum(b1)\n    shannon[t] = -sum(p1 .* log.(p1))\n    simpson[t] = sum(p1 .^ 2)\nend\n\nbegin\n    fig = Figure()\n    Axis(fig[1,1]; ylabel = \"Shannon index\")\n    lines!(sol.numeric_date, shannon, color = :black, linewidth = 2;)\n    Axis(fig[2,1]; ylabel = \"Simpson index\", xlabel = \"Date [year]\")\n    lines!(sol.numeric_date, simpson, color = :black, linewidth = 2;)\n    fig\nend","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"CurrentModule = GrasslandTraitSim","category":"page"},{"location":"tutorials/how_to_prepare_input/#How-to-prepare-the-input-data-to-start-a-simulation","page":"Prepare input and run simulation","title":"How to prepare the input data to start a simulation","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"Which input is needed (see also here):","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"daily climatic variables (PET, PAR, temperature, precipitation)\ndaily management variables (mowing, livestock density)\nsoil properties (texture, organic matter, bulk density, root depth)","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"We will create the input for a simulation from 2010 to 2012 with dummy data.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"If you want to use the model with data from your own site, you can prepare the input similarly. Convert the data to the units that are used here and then, add the Unitful.jl unit to the data.","category":"page"},{"location":"tutorials/how_to_prepare_input/#Climatic-data","page":"Prepare input and run simulation","title":"Climatic data","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"All climatic variables are here set to one to avoid complex data wrangling.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"For an explanation of the variables, see here.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"import GrasslandTraitSim as sim\nimport Dates\nusing Unitful\n\ndate = Dates.Date(2010):Dates.lastdayofyear(Dates.Date(2012))\ndoy = Dates.dayofyear.(date)\nyear = Dates.year.(date)\nntimesteps = length(date)\nts = Base.OneTo(ntimesteps) \n\n# --------------- PAR [MJ ha⁻¹ d⁻¹]\nPAR = ones(ntimesteps)u\"MJ / (ha * d)\"\n\n# --------------- PET [mm d⁻¹]\nPET = ones(ntimesteps)u\"mm / d\"\n\n# --------------- precipiation [mm d⁻¹]\t\nprecipitation = ones(ntimesteps)u\"mm / d\"\n\n# --------------- temperature [°C]\ntemperature = ones(ntimesteps)#u\"°C\"\n\n# --------------- yearly temperature sum [°C]\ntemperature_sum = sim.cumulative_temperature(; temperature, year) \n\n# --------------- final tuple of climatic inputs\nclimatic_inputs = (; temperature, temperature_sum, PAR, PET, precipitation)","category":"page"},{"location":"tutorials/how_to_prepare_input/#Management-data","page":"Prepare input and run simulation","title":"Management data","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"To show how to create the management data, we will add two mowing events  (first of May and first of August) and one grazing event per year (first of June to first of August).","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"If you want, you can vary the mowing height and the grazing intensity for each event. If the site was not mowed or grazed in a year, set the variable to NaN.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"For an explanation of the variables, see here.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"\n# --------------- mowing height [m], NaN if no mowing\nmowing = fill(NaN * u\"m\", ntimesteps)\nmowing_dates = [Dates.Date(2010, 5, 1), Dates.Date(2010, 8, 1), \n                Dates.Date(2011, 5, 1), Dates.Date(2011, 8, 1)]\n[mowing[d .== date] .= 0.08u\"m\" for d in mowing_dates]\n\n# --------------- grazing intensity in livestock density [ha⁻¹], NaN if no grazing\ngrazing = fill(NaN / u\"ha\", ntimesteps)\ngrazing_starts = [Dates.Date(2010, 6, 1), Dates.Date(2011, 6, 1)]\ngrazing_ends = [Dates.Date(2010, 8, 1), Dates.Date(2011, 8, 1)]\nlivestock_density = [1, 3]u\"ha^-1\"\n\nfor i in eachindex(grazing_starts)\n    r = grazing_starts[i] .<= date .<= grazing_ends[i]\n    grazing[r] .= livestock_density[i]\nend\n\nmanagement_tuple = (; mowing, grazing)","category":"page"},{"location":"tutorials/how_to_prepare_input/#Site-variables","page":"Prepare input and run simulation","title":"Site variables","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"For an explanation of the variables, see here.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"site_tuple = (;\n    totalN = 5.0,      # g kg⁻¹\n    CNratio = 10.0,    # -\n    clay = 50.0,       # %\n    silt = 45.0,       # %\n    sand = 5.0,        # %\n    organic = 6.0,     # %\n    bulk = 0.7,        # g cm⁻³\n    rootdepth = 160.0, # mm\n    initbiomass = 1500u\"kg / ha\",\n    initsoilwater = 80u\"mm\"\n)           ","category":"page"},{"location":"tutorials/how_to_prepare_input/#Fixed-simulation-parameters","page":"Prepare input and run simulation","title":"Fixed simulation parameters","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"simp = (\n    ntimesteps, \n    nspecies = 5,  \n    patch_xdim = 1, \n    patch_ydim = 1, \n    npatches = 1,\n    nutheterog = 0.0, \n    trait_seed = missing,  \n    \n    ## which processes to include\n    included = (;\n        senescence = true,\n        senescence_season = true,\n        potential_growth = true,\n        clonalgrowth = true,\n        mowing = true,\n        trampling = true,\n        grazing = true,\n        belowground_competition = true,\n        community_height_red = true,\n        height_competition = true,\n        pet_growth_reduction = true,\n        sla_transpiration = true,\n        water_growth_reduction = true,\n        nutrient_growth_reduction = true,\n        temperature_growth_reduction = true,\n        season_red = true,\n        radiation_red = true),\n    \n    ## include parameter for likelihood calculation?\n    likelihood_included = (; biomass = true, trait = true)\n)","category":"page"},{"location":"tutorials/how_to_prepare_input/#Putting-everything-together","page":"Prepare input and run simulation","title":"Putting everything together","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"Then we can add all the tuples to one bigger named tuple.","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"input_obj = (; daily_input = (;\n                   climatic_inputs..., \n                   management_tuple...,),\n               site = site_tuple, \n               simp, doy, date, ts)","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"For the plots from the Biodiversity Exploratories, we used the following convenience function to create the same object:","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"import GrasslandTraitSim.Valid as valid\ninput_obj_HEG01 = valid.validation_input(;\n    plotID = \"HEG01\", nspecies = 5);","category":"page"},{"location":"tutorials/how_to_prepare_input/#Traits","page":"Prepare input and run simulation","title":"Traits","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"If no input traits are specified, the model will generate for each simulation new traits from a Gaussian Mixture model that was fitted to grassland plant species in Germany (see random_traits!).","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"If you want to use your own traits, you can specify them in the following way:","category":"page"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"# the number of values per array has to be equal to the number of species\ntrait_input = (;\n    amc = [0.12, 0.52, 0.82, 0.13, 0.16],\n    sla = [0.021, 0.026, 0.014, 0.016, 0.0191]u\"m^2/g\",\n    height = [0.38, 0.08, 0.06, 0.51, 0.27]u\"m\",\n    rsa_above = [0.108, 0.163, 0.117, 0.132, 0.119]u\"m^2/g\",\n    ampm = [0.63, 0.52, 0.65, 0.58, 0.72],\n    lmpm = [0.55, 0.49, 0.62, 0.38, 0.68],\n    lncm = [19.6, 20.7, 22.7, 20.1, 23.6]u\"mg/g\")","category":"page"},{"location":"tutorials/how_to_prepare_input/#Run-a-simulation","page":"Prepare input and run simulation","title":"Run a simulation","text":"","category":"section"},{"location":"tutorials/how_to_prepare_input/","page":"Prepare input and run simulation","title":"Prepare input and run simulation","text":"## get parameters\np = sim.parameter(; input_obj)\n\n# if you will run many simulations, it is recommended to preallocated the vectors\n# but the simulation will also run without preallocation \nprealloc = sim.preallocate_vectors(; input_obj);\nprealloc_specific = sim.preallocate_specific_vectors(; input_obj);\n\n# traits will be generated, no preallocation\nsol = sim.solve_prob(; input_obj, p);\n\n# with static traits, with preallocation\nsol = sim.solve_prob(; input_obj, prealloc, prealloc_specific, p, trait_input);","category":"page"},{"location":"Modelling_API/biomass_dynamic/","page":"Overview","title":"Overview","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/biomass_dynamic/#Biomass-dynamics","page":"Overview","title":"Biomass dynamics","text":"","category":"section"},{"location":"Modelling_API/biomass_dynamic/","page":"Overview","title":"Overview","text":"<pre class=\"mermaid\">\nflowchart LR\n    A[growth] --> B[change in biomass]\n    C[senescence] --> B\n    D[mowing, grazing, trampling] --> B\n    E[\"clonal growth\\n(once per year)\"] --> B\n</pre>\n\n<script type=\"module\">\n    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';\n</script> ","category":"page"},{"location":"Modelling_API/biomass_dynamic/","page":"Overview","title":"Overview","text":"The change of the biomass of the plant species is modelled by...","category":"page"},{"location":"Modelling_API/biomass_dynamic/","page":"Overview","title":"Overview","text":"growth processes\nsenescence of biomass\nbiomass removal by mowing, grazing, and trampling\nonce per year and only if more than one patch is simulated: clonal growth","category":"page"},{"location":"tutorials/how_to_heterogeneous_site_management/","page":"Heterogenous site or management conditions","title":"Heterogenous site or management conditions","text":"CurrentModule = GrasslandTraitSim","category":"page"},{"location":"tutorials/how_to_heterogeneous_site_management/#How-to-model-heterogeneous-site-conditions-or-management","page":"Heterogenous site or management conditions","title":"How to model heterogeneous site conditions or management","text":"","category":"section"},{"location":"tutorials/how_to_heterogeneous_site_management/","page":"Heterogenous site or management conditions","title":"Heterogenous site or management conditions","text":"This tutorial assumes that you have read the basic tutorial How to prepare the input data to start a simulation. We will use an existing input object and change the number of patches to two and remove the management in the second patch.","category":"page"},{"location":"tutorials/how_to_heterogeneous_site_management/","page":"Heterogenous site or management conditions","title":"Heterogenous site or management conditions","text":"import GrasslandTraitSim as sim\nimport GrasslandTraitSim.Valid as valid\n\nusing Unitful\nusing Statistics\nusing CairoMakie\n\npatch_xdim = 2 \npatch_ydim = 1\n\ninput_obj_prep = valid.validation_input(;\n    plotID = \"HEG01\", nspecies = 25,\n    trait_seed = 99);\n\n# --------------- change the number of patches\nsimp_prep = Dict()\nfor k in keys(input_obj_prep.simp)\n    simp_prep[k] = input_obj_prep.simp[k]\nend\nsimp_prep[:patch_xdim] = patch_xdim\nsimp_prep[:patch_ydim] = patch_ydim\nsimp_prep[:npatches] = patch_xdim * patch_ydim\nsimp = NamedTuple(simp_prep)\n\n# --------------- change the management\ndaily_input_prep = Dict()\nfor k in keys(input_obj_prep.daily_input)\n    daily_input_prep[k] = input_obj_prep.daily_input[k]\nend\n\nmowing_prep = daily_input_prep[:mowing]\nmowing = fill(NaN * u\"m\", length(mowing_prep), patch_xdim, patch_ydim)\nmowing[:, 1, 1] .= mowing_prep\n\ngrazing_prep = daily_input_prep[:grazing]\ngrazing = fill(NaN / u\"ha\", length(grazing_prep), patch_xdim, patch_ydim)\ngrazing[:, 1, 1] .= grazing_prep\n\ndaily_input_prep[:mowing] = mowing\ndaily_input_prep[:grazing] = grazing\ndaily_input = NamedTuple(daily_input_prep)\n\n# --------------- add everything together\ninput_obj = (; daily_input, simp,\n               site = input_obj_prep.site,  \n               doy = input_obj_prep.doy, \n               date = input_obj_prep.date, \n               ts = input_obj_prep.ts)","category":"page"},{"location":"tutorials/how_to_heterogeneous_site_management/","page":"Heterogenous site or management conditions","title":"Heterogenous site or management conditions","text":"p = sim.parameter(; input_obj) \n\nsol = sim.solve_prob(; input_obj, p);\n\npatch_biomass = dropdims(sum(sol.output.biomass; dims = :species); dims = :species)\nnumeric_date = sim.Valid.to_numeric.(sol.date)\n\nbegin\n    fig = Figure()\n    Axis(fig[1, 1];\n         ylabel = \"Aboveground dry biomass [kg ha⁻¹]\", \n         xlabel = \"Date [year]\")\n\n    for x in Base.OneTo(patch_xdim)\n        for y in Base.OneTo(patch_ydim)\n            lines!(numeric_date, vec(ustrip.(patch_biomass[:, x, y]));)  \n        end\n    end\n    \n    fig\nend","category":"page"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/defoliation/#Mowing,-grazing,-and-trampling","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"","category":"section"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"Biomass is removed by...","category":"page"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"🚜 mowing\n🐄 grazing and trampling","category":"page"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"","category":"page"},{"location":"Modelling_API/defoliation/#Mowing","page":"Mowing, grazing, and trampling","title":"Mowing","text":"","category":"section"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"mowing!","category":"page"},{"location":"Modelling_API/defoliation/#GrasslandTraitSim.mowing!","page":"Mowing, grazing, and trampling","title":"GrasslandTraitSim.mowing!","text":"mowing!(;\n    calc,\n    mowing_height,\n    days_since_last_mowing,\n    height,\n    biomass,\n    mowing_mid_days)\n\nbeginalign\n    lambda = fractextmown_heighttextheight\n    textmow_factor = frac11+exp(-01*(textdays_since_last_mowing\n        - textmowing_mid_days)\n    textmow = lambda cdot textbiomass\nendalign\n\nThe mow_factor has been included to account for the fact that less biomass is mown when the last mowing event was not long ago. Influence of mowing for plant species with different heights (height): (Image: Image of mowing effect)\n\nVisualisation of the mow_factor: (Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"","category":"page"},{"location":"Modelling_API/defoliation/#Grazing-and-trampling","page":"Mowing, grazing, and trampling","title":"Grazing and trampling","text":"","category":"section"},{"location":"Modelling_API/defoliation/","page":"Mowing, grazing, and trampling","title":"Mowing, grazing, and trampling","text":"grazing!\ntrampling!\ncalculate_relbiomass!","category":"page"},{"location":"Modelling_API/defoliation/#GrasslandTraitSim.grazing!","page":"Mowing, grazing, and trampling","title":"GrasslandTraitSim.grazing!","text":"grazing!(; t, x, y, container, LD, biomass)\n\nbeginalign\nrho = left(fracLNCMLNCM_cwmright) ^ textleafnitrogen_graz_exp \nμₘₐₓ = κ cdot textLD \nh = frac1μₘₐₓ \na = frac1textgrazing_half_factor^2 cdot h \ntexttotgraz = fraca cdot (sum textbiomass)^2\n                    1 + acdot hcdot (sum textbiomass)^2 \ntextshare = frac\n    rho cdot textbiomass\n    sum left rho cdot textbiomass right \ntextgraz = textshare cdot texttotgraz\nendalign\n\nLD daily livestock density [livestock units ha⁻¹]\nκ daily consumption of one livestock unit [kg d⁻¹], follows [11]\nρ palatability, dependent on nitrogen per leaf mass (LNCM) [-]\ngrazing_half_factor is the half-saturation constant [kg ha⁻¹]\nequation partly based on [10]\n\nInfluence of grazing (livestock density = 2), all plant species have an equal amount of biomass (total biomass / 3) and a leaf nitrogen content of 15, 30 and 40 mg/g:\n\nleafnitrogen_graz_exp = 1.5\n\n(Image: )\n\nleafnitrogen_graz_exp = 5\n\n(Image: )\n\nInfluence of grazing_half_factor: (Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/defoliation/#GrasslandTraitSim.trampling!","page":"Mowing, grazing, and trampling","title":"GrasslandTraitSim.trampling!","text":"trampling!(; container, LD, biomass)\n\nbeginalign\ntexttrampled_proportion =\n    textheight cdot textLD cdot texttrampling_factor  \ntexttrampled_biomass =\n    min(textbiomass  texttrampled_proportion\n        textbiomass) \nendalign\n\nIt is assumed that tall plants (trait: height) are stronger affected by trampling. A linear function is used to model the influence of trampling.\n\nMaximal the whole biomass of a plant species is removed by trampling.\n\nbiomass [frackgha]\nLD daily livestock density [fractextlivestock unitsha]\ntrampling_factor [ha m⁻¹]\nheight canopy height [m]\n\n(Image: Image of trampling effect)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/defoliation/#GrasslandTraitSim.calculate_relbiomass!","page":"Mowing, grazing, and trampling","title":"GrasslandTraitSim.calculate_relbiomass!","text":"calculate_relbiomass!(; calc, p)\n\nRelative biomass of the patches in relation to the mean biomass of the overall grassland.\n\ntextrelbiomass = fractextpatch_biomasstextmpatch_biomass\n\nrelbiomass relative biomass of each patch [-]\npatch_biomass sum of the biomass of all species in one patch [kg ha⁻¹]\nmpatch_biomass mean of the sum of the biomass of all species in all patches [kg ha⁻¹]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/senescence/","page":"Senescence","title":"Senescence","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/senescence/#Senescence","page":"Senescence","title":"Senescence","text":"","category":"section"},{"location":"Modelling_API/senescence/","page":"Senescence","title":"Senescence","text":"senescence!\nseasonal_component_senescence","category":"page"},{"location":"Modelling_API/senescence/#GrasslandTraitSim.senescence!","page":"Senescence","title":"GrasslandTraitSim.senescence!","text":"senescence!(; container, ST, biomass)\n\nCalculate the biomass that dies due to senescence.\n\nS_txys = μ_s cdot textSEN_t cdot B_txys\n\nThe senescence process is based on the senescence rate μ and a seasonal component of the senescence.\n\nμ basic senescence rate [d⁻¹], see senescence_rate!\nSEN seasonal component of the senescence (between 1 and 3), see seasonal_component_senescence\nB biomass dry weight [kg ha⁻¹]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/senescence/#GrasslandTraitSim.seasonal_component_senescence","page":"Senescence","title":"GrasslandTraitSim.seasonal_component_senescence","text":"seasonal_component_senescence(; container, ST)\n\nSeasonal factor for the senescence rate.\n\nbeginalign*\nSEN =\nbegincases\n1   textif  ST  Ψ_1 \n1+(SEN_max - 1) fracST - Ψ_1Ψ_2 - Ψ_1  textif Ψ_1  ST  Ψ_2 \nSEN_max   textif ST  Ψ_2\nendcases  \nendalign*\n\nST annual cumulative temperature [C]\nΨ₁=775  [C]\nΨ₂=3000 [C]\nSEN_max=3\n\n(Image: Seasonal component death rate)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/growth/#Growth","page":"Growth","title":"Growth","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    A[[potential growth]] ==> D(actual growth)\n    B[[adjustment by environmental factors]] ==> D\n    C[[species-specific adjustment]] ==> D\n    subgraph \" \"\n    L[↓ radiation] -.-> B\n    M[↓ temperature] -.-> B\n    N[⇅ seasonal factor] -.-> B\n    end\n    subgraph \" \"\n    F[⇅ height influence] -.-> C\n    G[below ground competition] -.-> H\n    G -.-> I\n    H[↓ water stress] -.-> C\n    I[↓ nutrient stress] -.-> C\n    end;\n</div>","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"growth!","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.growth!","page":"Growth","title":"GrasslandTraitSim.growth!","text":"growth!(; t, container, biomass, water, nutrients, WHC, PWP)\n\nCalculates the actual growth of the plant species.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Potential-growth","page":"Growth","title":"Potential growth","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"potential_growth!\ncalculate_LAI","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.potential_growth!","page":"Growth","title":"GrasslandTraitSim.potential_growth!","text":"potential_growth!(; container, biomass, PAR)\n\nCalculates the potential growth of all plant species in a specific patch.\n\nThis function is called each time step (day) for each patch. The PAR value is the photosynthetically active radiation of the day.\n\nFirst, the leaf area indices of all species are calculated (see calculate_LAI). Then, the total leaf area is computed. An inverse exponential function is used to calculate the total primary production:\n\nThis primary production is then multiplied with the share of the leaf area index of the individual species\n\nbeginalign*\ntextpotgrowth_total =\n    PAR cdot RUE_max cdot (1 -  textexp(-k cdot textLAItot)) \ntextpotgrowth = textpotgrowth_total cdot fractextLAItextLAItot\nendalign*\n\nPAR photosynthetically active radiation [MJ ha⁻¹ d⁻¹]\nRUE_max maximum radiation use efficiency [kg MJ⁻¹]\nk extinction coefficient [-]\nLAItot total leaf area index [m² m⁻²]\nLAIs leaf area index of each species [m² m⁻²]\npotgrowth_total total potential growth [kg ha⁻¹ d⁻¹]\npotgrowth potential growth of each species [kg ha⁻¹ d⁻¹]\n\n(Image: Influence of the specific leaf area on the potential growth)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/#GrasslandTraitSim.calculate_LAI","page":"Growth","title":"GrasslandTraitSim.calculate_LAI","text":"calculate_LAI(; container, biomass, LAIs)\n\nCalculate the leaf area index of all species of one habitat patch.\n\nbeginalign\ntextLAI = textSLA cdot textbiomass cdot textLAM \ntextLAI_texttot = sum textLAI\nendalign\n\nSLA specific leaf area [m² g⁻¹]\nLAM Proportion of laminae in green biomass [unitless], the value 0.62 is derived by [8]\nbiomass [kg ha⁻¹]\n\nThere is a unit conversion from the SLA and the biomass to the unitless LAI involved.\n\nThe array LAIs is mutated inplace.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Adjustment-by-environmental-factors","page":"Growth","title":"Adjustment by environmental factors","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"The listed functions limit the growth potential of all  plant species without any species-specific reduction:","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"☀ the photosynthetically active radiation radiation_reduction\n🌡 the air temperature temperature_reduction\n📈 a seasonal effect, that is modelled by the accumulated degree days seasonal_reduction\nan effect that a smaller plant community can build up less biomass community_height_reduction","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"radiation_reduction\ntemperature_reduction\nseasonal_reduction\ncommunity_height_reduction","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.radiation_reduction","page":"Growth","title":"GrasslandTraitSim.radiation_reduction","text":"radiation_reduction(; PAR, radiation_red)\n\nReduction of radiation use efficiency at light intensities higher than 5 MJcdot m^-2cdot d^-1\n\ntextRred = textmin(1 1-gamma_1(textPAR(t) - gamma_2))\n\nThe equations and the parameter values are taken from [9].\n\nγ₁ is the empirical parameter for a decrease in RUE for high PAR values, here set to 0.0445 [m² d MJ⁻¹]\nγ₂ is the threshold value of PAR from which starts a linear decrease in RUE, here set to 5 [MJ m⁻² d⁻¹]\n\ncomment to the equation/figure: PAR values are usually between 0 and 15 MJcdot m^-2cdot d^-1 and therefore negative values of Rred are very unlikely (Image: Image of the radiation reducer function)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/#GrasslandTraitSim.temperature_reduction","page":"Growth","title":"GrasslandTraitSim.temperature_reduction","text":"temperature_reduction(; T, temperature_growth_reduction)\n\nReduction of the potential growth if the temperature is low or too high with a step function.\n\ntexttemperature_reduction(T) =\n    begincases\n    0  textif  T  T_0 \n    fracT - T_0T_1 - T_0  textif  T_0  T  T_1 \n    1  textif  T_1  T  T_2 \n    fracT_3 - TT_3 - T_2  textif  T_2  T  T_3 \n    0  textif  T  T_3 \n    endcases\n\nEquations are taken from [10] and theses are based on [9]. T₁ is in [10] a species specific parameter, but here it is set to 12°C for all species.\n\nT₀ is the lower temperature threshold for growth, here set to 3°C\nT₁ is the lower bound for the optimal temperature for growth, here set to 12°C\nT₂ is the upper bound for the optiomal temperature for growth, here set to 20°C\nT₃ is the maximum temperature for growth, here set to 35°C\n\n(Image: Image of the temperature reducer function)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/#GrasslandTraitSim.seasonal_reduction","page":"Growth","title":"GrasslandTraitSim.seasonal_reduction","text":"seasonal_reduction(; ST, season_red)\n\nReduction of growth due to seasonal effects. The function is based on the yearly cumulative sum of the daily mean temperatures (ST).\n\ntextseasonal(ST) =\n    begincases\n    SEA_min  textif  ST  200 \n    SEAₘᵢₙ + (SEAₘₐₓ - SEAₘᵢₙ) * fracST - 200ST₁ - 400 \n        textif  200  ST  ST₁ - 200 \n    SEA_max  textif  ST₁ - 200  ST  ST₁ - 100 \n    SEAₘᵢₙ + (SEAₘᵢₙ - SEAₘₐₓ) * fracST - ST₂ST₂ - ST₁ - 100 \n        textif  ST₁ - 100  ST  ST₂ \n    SEA_min  textif  ST  ST₂ \n    endcases\n\nThis empirical function was developed by [8]. In contrast to [8] SEAₘᵢₙ, SEAₘₐₓ, ST₁ and ST₂ are not species specific parameters, but are fixed for all species. The values of the parameters are based on [8] and were chosen to resemble the mean of all functional groups that were described there.\n\nA seasonal factor greater than one means that growth is increased by the use of already stored resources. A seasonal factor below one means that growth is reduced as the plant stores resources [8].\n\nST is the yearly cumulative sum of the daily mean temperatures\nSEAₘᵢₙ is the minimum value of the seasonal effect, here set to 0.67 [-]\nSEAₘₐₓ is the maximum value of the seasonal effect, here set to 1.33 [-]\nST₁ and ST₂ are parameters that describe the thresholds of the step function,  here set to 625 and 1300 [°C d]\n\n(Image: Image of the seasonal effect function)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/#GrasslandTraitSim.community_height_reduction","page":"Growth","title":"GrasslandTraitSim.community_height_reduction","text":"community_height_reduction(; container, biomass)\n\nOnly one species is used for the simulation: (Image: Image of the community height reducer fucntion) (Image: Image of the effect of the community height reduction)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"–","category":"page"},{"location":"Modelling_API/growth/#Species-specific-adjustment","page":"Growth","title":"Species-specific adjustment","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    F[⇅ height influence] --> C[[species-specific adjustment]]\n    G[below ground competition] --> H\n    G --> I\n    H[↓ water stress] -->  C\n    I[↓ nutrient stress] --> C;\n</div>","category":"page"},{"location":"Modelling_API/growth/#plant_height","page":"Growth","title":"Influence of plant height","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    K(trait: height) -->|taller plants get\\nmore light| F\n    F[⇅ height influence] --> C[[species-specific adjustment]]\n</div>","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"Taller plants get more light and can therefore growth more than smaller plants.  This is modelled by the influence of the potential height in relation to the community  weighted mean potential height.","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"The potential height refers to the height that the plant would reach  if it would not be limited by other factors.","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"height_influence!","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.height_influence!","page":"Growth","title":"GrasslandTraitSim.height_influence!","text":"height_influence!(; container, biomass)\n\ntextheightinfluence =\n    1 +\n    fractextheightcdottextheight_textstrengthtextheight_textcwm\n    -textheight_textstrength\n\nheight_strength_exp lies between 0 (no influence) and 1 (strong influence of the plant height) [-]\ncwm_height is community weighted mean height [m]\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"–","category":"page"},{"location":"Modelling_API/growth/#below_competition","page":"Growth","title":"Below-ground competition","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    B[biomass] \n    T[trait similarity of\\n root surface area / aboveground biomass\\nand arbuscular mycorrhizal colonisation]\n    X[\"biomass · trait similarity\"]\n    E[below ground competition]\n\n    T -->|species with similar\\ntraits compete more\\nstrongly for the same resources| X\n    B --> X\n    X --> E;\n</div>","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"below_ground_competition!\ninit_transfer_functions!","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.below_ground_competition!","page":"Growth","title":"GrasslandTraitSim.below_ground_competition!","text":"below_ground_competition!(; container, biomass)\n\nModels the below-ground competiton between plants.\n\nPlant available nutrients and water are reduced if a large biomass of plant species with similar root surface area per above ground biomass (rsa_above) and arbuscular mycorrhizal colonisation (amc) is already present.\n\nWe define for N species the trait similarity matrix TS in 01^N times N with trait similarities between the species i and j (ts_ij), where ts_ij = ts_ji and ts_ii = 1:\n\nTS =\nbeginbmatrix\n    ts_11  ts_12  dots    ts_1N \n    ts_21  ts_22    \n    vdots    ddots    \n    ts_N1     ts_NN \nendbmatrix\n= beginbmatrix\n    1  ts_12  dots    ts_1N \n    ts_21  1    \n    vdots    ddots    \n    ts_N1     1 \nendbmatrix\n\nand the biomass vector B in 0textkg ha¹ textkg ha¹^N with the biomass of each plant species b:\n\nB =\nbeginbmatrix\n    b_1 \n    b_2 \n    vdots \n    b_N \nendbmatrix\n\nThen, we multiply the trait similarity matrix TS with the biomass vector B:\n\nTS cdot B =\nbeginbmatrix\n    1  ts_12  dots    ts_1N \n    ts_21  1    \n    vdots    ddots    \n    ts_N1     1 \nendbmatrix cdot\nbeginbmatrix\n    b_1 \n    b_2 \n    vdots \n    b_N \nendbmatrix =\nbeginbmatrix\n    1 cdot b_1 + ts_12 cdot b_2 + dots + ts_1N cdot b_N \n    ts_21 cdot b_1 + 1 cdot b_2 + dots + ts_2N cdot b_N \n    vdots \n    ts_N1 cdot b_1 + ts_N2 cdot b_2 + dots + 1 cdot b_N \nendbmatrix\n\nThe factors are then calculated as follows:\n\ntextbiomass_density_factor =\n    left(fracTS cdot Btextbiomass_densright) ^\n    - textbelowground_density_effect \n\nThe reduction factors control the density and increases the \"functional dispersion\" of the root surface area per aboveground biomass and the arbuscular mycorrhizal colonisation.\n\nThe TS matrix is computed before the start of the simulation (calculation of trait similarity) and includes the traits arbuscular mycorrhizal colonisation rate (amc) and the root surface area devided by the above ground biomass (rsa_above).\n\nbiomass_density_factor is the factor that adjusts the plant available nutrients and soil water [-]\nTS is the trait similarity matrix, TS in 01^N times N [-]\nB is the biomass vector, B in 0 ^N [kg ha⁻¹]\nbelowground_density_effect is the exponent of the below ground competition factor [-]\n\n(Image: )\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/#GrasslandTraitSim.init_transfer_functions!","page":"Growth","title":"GrasslandTraitSim.init_transfer_functions!","text":"init_transfer_functions!(; calc, p)\n\nInitialisation of the transfer functions that link the traits to the response to water and nutrient stress.\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Water-stress","page":"Growth","title":"Water stress","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    W[↓ water stress] \n    E[\"below ground competition factor D [-]\"]\n    A[\"soil water content W [mm]\"]\n    K[\"water holding capacity WHC [mm]\"]\n    L[\"permanent wilting point PWP [mm]\"]\n    P[\"scaled soil water content Wsc [-]\"]\n    M[\"plant available water Wp [-]\"]\n    H[\"potential evapotranspiration PET [mm]\"]\n    R[trait: root surface area /\\n aboveground biomass]\n    S[trait: specific leaf area]\n\n    A --> P\n    K --> P\n    L --> P\n    P --> M\n    E --> M\n    H --> M\n    M --> W\n    R ---> W\n    S ---> W;\n</div>","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"The species differ in the response to water stress by the different specific leaf areas and root surface areas per above ground biomass. The values of both response curves are multiplied to get factor that reduces the plant available water.","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"It is implemented in water_reduction!.","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"water_reduction!","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.water_reduction!","page":"Growth","title":"GrasslandTraitSim.water_reduction!","text":"water_reduction!(; container, water, water_growth_reduction, PET, PWP, WHC)\n\nReduction of growth based on the plant available water and the traits specific leaf area and root surface area per aboveground biomass.\n\nDerives the plant available water.\n\nThe plant availabe water is dependent on the soil water content, the water holding capacity (WHC), the permanent wilting point (PWP), the potential evaporation (PET) and a belowground competition factor:\n\nbeginalign*\n    W_sc txy = fracW_txy - PWP_xyWHC_xy-PWP_xy \n    W_p txys = D_txys cdot 1 bigg left(1 + fractextexpleft(beta_pet cdot left(PET_txy - alpha_pet right) right) 1  (1-W_sc txy) - 1right)\nendalign*\n\nW_sc txy is the scaled soil water content in 0 1 [-]\nW_txy is the soil water content [mm]\nPWP_xy is the permanent wilting point [mm]\nWHC_xy is the water holding capacity [mm]\nW_p txys is the plant available water [-]\nD_txys is the belowground competition factor [-], in the programming code is is called biomass_density_factor\nPET_txy is the potential evapotranspiration [mm]\nβ_pet is a parameter that defines the steepness of the reduction function\nα_pet is a parameter that defines the midpoint of the reduction function\n\n(Image: )\n\nDerive the water stress based on the specific leaf area and the plant availabe water.\n\nIt is assumed, that plants with a higher specific leaf area have a higher transpiration per biomass and are therefore more sensitive to water stress. A transfer function is used to link the specific leaf area to the water stress reduction.\n\nInitialization:\n\nThe specicies-specifc parameter H_sla is initialized and later used in the reduction function.\n\ntextH_sla = textmin_sla_mid +\n    fractextmax_sla_mid - textmin_sla_mid\n    1 + exp(-textβ_sla_mid cdot (sla - textmid_sla))\n\nsla is the specific leaf area of the species [m² g⁻¹]\nmin_sla_mid is the minimum of H_sla that can be reached with a very low specific leaf area [-]\nmax_sla_mid is the maximum of H_sla that can be reached with a very high specific leaf area [-]\nmid_sla is a mean specific leaf area [m² g⁻¹]\nβ_sla_mid is a parameter that defines the steepness of function that relate the sla to H_sla\n\nReduction factor based on the plant availabe water:\n\ntextW_sla = 1 - textδ_sla +\n    fractextδ_sla\n    1 + exp(-textk_sla cdot\n        (textWp - textH_sla))\n\nW_sla is the reduction factor for the growth based on the specific leaf area [-]\nH_sla is the value of the plant available water at which the reduction factor is in the middle between 1 - δ_sla and 1 [-]\nδ_sla is the maximal reduction of the growth based on the specific leaf area\nWp is the plant available water [-]\nk_sla is a parameter that defines the steepness of the reduction function\n\nOverview over the parameters:\n\nParameter Type Value\nmin_sla_mid fixed -0.8 [-]\nmax_sla_mid fixed 0.8  [-]\nmid_sla fixed 0.025 [m² g⁻¹]\nβ_sla_mid fixed 75 [g m⁻²]\nk_sla fixed 5 [-]\nδ_sla calibrated -\nH_sla species-specific, derived -\n\nInfluence of the δ_sla:\n\nδ_sla equals 1: (Image: )\n\nδ_sla equals 0.5: (Image: )\n\nReduction of growth due to stronger water stress for lower specific root surface area per above ground biomass (rsa_above).\n\nthe strength of the reduction is modified by the parameter δ_wrsa\n\nδ_wrsa equals 1: (Image: Graphical overview of the functional response)\n\nδ_wrsa equals 0.5:\n\n(Image: Graphical overview of the functional response)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Specific-leaf-area-linked-to-water-stress","page":"Growth","title":"Specific leaf area linked to water stress","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Root-surface-area-/-aboveground-biomass-linked-to-water-stress","page":"Growth","title":"Root surface area / aboveground biomass linked to water stress","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"","category":"page"},{"location":"Modelling_API/growth/#Nutrient-stress","page":"Growth","title":"Nutrient stress","text":"","category":"section"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<div class=\"mermaid\">\nflowchart LR\n    S[↓ nutrient stress] \n    N[nutrient index]\n    R[trait: root surface area /\\n aboveground biomass]\n    A[trait: arbuscular mycorrhizal colonisation]\n    B[belowground competition]\n    L[plant available nutrients]\n\n    N --> L\n    B --> L\n    L --> S\n    R --> S\n    A --> S;\n</div>","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"The species differ in the response to nutrient availability by different proportion of mycorrhizal colonisations and root surface per above ground biomass. The maximum of both response curves is used for the nutrient reduction function. It is assumed that the plants needs either many fine roots per above ground biomass or have a strong symbiosis with mycorrhizal fungi. ","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"It is implemented in nutrient_reduction!.","category":"page"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"nutrient_reduction!","category":"page"},{"location":"Modelling_API/growth/#GrasslandTraitSim.nutrient_reduction!","page":"Growth","title":"GrasslandTraitSim.nutrient_reduction!","text":"nutrient_reduction!(; container, nutrient_growth_reduction, nutrients)\n\nReduction of growth based on plant available nutrients and the traits arbuscular mycorrhizal colonisation and root surface area / aboveground biomass.\n\nReduction of growth due to stronger nutrient stress for lower arbuscular mycorrhizal colonisation (AMC).\n\nthe strength of the reduction is modified by the parameter δ_amc\n\nδ_amc equals 1: (Image: Graphical overview of the AMC functional response)\n\nδ_amc equals 0.5: (Image: Graphical overview of the AMC functional response)\n\nReduction of growth due to stronger nutrient stress for lower specific root surface area per above ground biomass (rsa_above).\n\nthe strength of the reduction is modified by the parameter δ_nrsa\n\nδ_nrsa equals 1: (Image: Graphical overview of the functional response)\n\nδ_nrsa equals 0.5: (Image: Graphical overview of the functional response)\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/growth/","page":"Growth","title":"Growth","text":"<script type=\"module\">\n    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';\n</script> ","category":"page"},{"location":"biodiversity_exploratories/calibration_data/#Model-calibration-data-from-the-Biodiversity-Exploratories","page":"Calibration data","title":"Model calibration data from the Biodiversity Exploratories","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/#Input-data","page":"Calibration data","title":"Input data","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/#Daily-abiotic-conditions","page":"Calibration data","title":"Daily abiotic conditions","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"The temperature and precipitation was downloaded from the Biodiversity Exploratories data base and is specific to each site.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Estimates of the photosynthetically active radiation (PAR) are available with a three hours resolution. A quadratic regression was fitted to the data and used to estimate the daily PAR.  The daily PAR equals the sum under the quadratic regression curve. The spatial resolution of the gridded data set is not high enough to describes differences on the plot level, therefore the daily PAR values were calculated per region  (Exploratories: Schorfheide-Chorin, Hainich, Schwäbische Alb).","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"The potential evapotranspiration (PET) values were estimated by the agrometeorological model AMBAV, the VPGB variable  (\"potential evapotranspiration over gras\") is used here. Estimates of PET are  available for different weather stations in Germany. The closest weather station of each Exploratory was chosen to get the daily PET values. ","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Variable Description data source\ntemperature[t, plot] Temperature [°C] [12]\nprecipitation[t, plot] Precipitation [mm d⁻¹] [12]\nPAR[t, region] Photosynthetically active radiation [MJ ha⁻¹ d⁻¹] [13]\nPET[t, region] Potential evapotranspiration [mm d⁻¹] [14]","category":"page"},{"location":"biodiversity_exploratories/calibration_data/#Daily-management-variables","page":"Calibration data","title":"Daily management variables","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Unfortunately, the raw data set is at the moment not publicly available.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Variable Description data source\nmowing Height of mowing event, NaN means no mowing [m] [15]\ngrazing Grazing intensity measured in livestock units, NaN means no grazing [LD ha⁻¹] [15]","category":"page"},{"location":"biodiversity_exploratories/calibration_data/#Raw-time-invariant-site-variables","page":"Calibration data","title":"Raw time invariant site variables","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"The texture classes of [16] were partly collapsed: Fine_Silt, Medium_Silt, Coarse_Silt to silt and Fine_Sand, Medium_Sand, Coarse_Sand to sand.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Variable Description Data source\nsand Sand content [%] [16]\nsilt Silt content [%] [16]\nclay Clay content [%] [16]\nrootdepth Mean rooting depth of plants [mm, orig: cm] [17]\nbulk Bulk density [g cm⁻³] [18]\norganic Organic matter content [%] [1]\ntotalN Total nitrogen [g kg⁻¹] [1][2][3][4]\nCNratio Carbon to nitrogen ratio [-] [1][2][3][4]","category":"page"},{"location":"biodiversity_exploratories/calibration_data/#Calibration-data","page":"Calibration data","title":"Calibration data","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Biomass and soil moisture data was downloaded for 2009 - 2022.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Variable Description Data source\nbiomass[plot, year] Dried aboveground biomass, cutted at a height of 4 cm once per year in spring [g m⁻²] [19][20][21][22][23][24][25][26][27][28][29][30][31][32]\nsoilmoisture[plot, t] Daily soil moisture [%] [12]","category":"page"},{"location":"biodiversity_exploratories/calibration_data/#Community-weighted-mean-traits","page":"Calibration data","title":"Community weighted mean traits","text":"","category":"section"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Raw data:","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Vegetation data was subsetted to 2009 - 2002. The exact date of the vegetation records is not available in [33], therefore the dates of the vegetation sampling were used from the header data sets.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Species mean trait values were calculated from the raw trait data sets.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Description Data source\nVegetation records data: [33], date: [34][35][36][22][23][24][25][26][27][28][29][30][31][32]\nSpecific leaf area [m² g⁻¹] [37]\nArbuscular mycorrhizal colonisation [-] [38]\nRoot surface area / aboveground biomass [m² g⁻¹] [38]\nPlant height [m] [39]\nLeaf nitrogen / leaf mass [mg g⁻¹] [39]","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Derived community weighted mean traits:","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Vegetation data set with exact dates was joined with species mean trait values to calculate community weighted mean traits for each plot and year.","category":"page"},{"location":"biodiversity_exploratories/calibration_data/","page":"Calibration data","title":"Calibration data","text":"Variable Description\nCWM_sla[t, plot] Specific leaf area [m² g⁻¹]\nCWM_amc[t, plot] Arbuscular mycorrhizal colonisation [-]\nCWM_rsa_above[t, plot] Root surface area / aboveground biomass [m² g⁻¹]\nCWM_height[t, plot] Plant height [m]\nCWM_lncm[t, plot] Leaf nitrogen / leaf mass [mg g⁻¹]","category":"page"},{"location":"Modelling_API/water/","page":"Water dynamics","title":"Water dynamics","text":"CurrentModule=GrasslandTraitSim","category":"page"},{"location":"Modelling_API/water/#Water-dynamics","page":"Water dynamics","title":"Water dynamics","text":"","category":"section"},{"location":"Modelling_API/water/","page":"Water dynamics","title":"Water dynamics","text":"change_water_reserve\ntranspiration\nevaporation","category":"page"},{"location":"Modelling_API/water/#GrasslandTraitSim.change_water_reserve","page":"Water dynamics","title":"GrasslandTraitSim.change_water_reserve","text":"change_water_reserve(; container, patch_biomass, water, precipitation,\n                       LAItot, PET, WHC, PWP)\n\nModels the change of the water reserve in the soil within one day.\n\nPrecipitation fills the water reserve (precipitation).\n\nThe water reserve cannot exceed the water holding capacity (WHC). If the water reserve is higher than the WHC the water will drain from the soil (drain).\n\nThe actual evapotranspiration (AET) consists of the evaporation and the transpiration. Which of the two processes is more important depends on the plant cover that is simulated by the total leaf area index (LAItot).\n\nThe transpiration (ATr) is limited by the plant available water (W) and the potential evapotranspiration (PET) whereas the evaporation (AEv) is only limited by the potential evapotranspiration (PET).\n\nThe change of the water reserve is calculated as follows:\n\nbeginalign\n    textAET =\n        minleft(textwater cdot frac1d textATr + textAEv right) \n    textdrain =\n        maxleft(\n            textwater cdot frac1d +\n            textprecipitation -\n            textWHC cdot frac1d -\n            textAET 0 right) \n    textdu_water = textprecipitation - textdrain - textAET\nendalign\n\nNote the unit change of the soil water content water and the water holding capacity WHC from [mm] to [mm d⁻¹] to compare these values to water reserve changes per day.\n\nwater is the soil water content [mm]\ndu_water is the change of the water reserve in the soil [mm d⁻¹]\nprecipitation is the precipitation [mm d⁻¹]\ndrain is the drainage of water from the soil [mm d⁻¹]\nAET is the actual evapotranspiration [mm d⁻¹]\nATr is the actual transpiration of water from the soil [mm d⁻¹]\nAEv is the actual evaporation of water from the soil [mm d⁻¹]\nWHC is the water holding capacity of the soil [mm]\nPWP is the permanent wilting point of the soil [mm]\nPET is the potential evapotranspiration [mm d⁻¹]\nLAItot is the total leaf area index of all plants [-]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/water/#GrasslandTraitSim.transpiration","page":"Water dynamics","title":"GrasslandTraitSim.transpiration","text":"transpiration(; container, patch_biomass, water, PWP, WHC, PET, LAItot)\n\nTranspiration of water from the plants.\n\nThe transpiration is dependent on the plant available water (W), potential evapotranspiration (PET) and a effect of the community weighted mean specific leaf area (sla_effect).\n\nIf the community weighted mean specific leaf area is high (many plant individuals with thin leaves), a higher transpiration is assumed.\n\nbeginalign\n    textW = fractextwater - textPWPtextWHC - textPWP \n    textsla_effect =\n        left(fractextcwm_slatextsla_tr right)^textsla_tr_exponent \n    textATr =\n        textW cdot textPET cdot textsla_effect cdot\n        minleft(1 fractextLAItot3 right)\nendalign\n\nATr is the actual transpiration of water from the soil [mm d⁻¹]\nW is the plant available water [-]\nwater is the soil water content [mm]\nWHC is the water holding capacity of the soil [mm]\nPWP is the permanent wilting point of the soil [mm]\nPET is the potential evapotranspiration [mm d⁻¹]\nLAItot is the total leaf area index of all plants [-]\nsla_effect is the effect of the community weighted specific leaf area on the transpiration, can range from 0 (no transpiraiton at all) to ∞ (very strong transpiration) [-]\ncwm_sla is the community weighted mean specific leaf area [m² kg⁻¹]\nsla_tr is a specific leaf area, if the cwm_sla equals sla_tr the sla_effect is 1 [m² kg⁻¹]\nsla_tr_exponent is the exponent in the sla_effect function and influences how strong a cwm_sla that deviates from sla_tr changes the sla_effect [-]\n\n\n\n\n\n","category":"function"},{"location":"Modelling_API/water/#GrasslandTraitSim.evaporation","page":"Water dynamics","title":"GrasslandTraitSim.evaporation","text":"evaporation(; water, WHC, PET, LAItot)\n\nEvaporation of water from the soil.\n\ntextAEv =\n    fractextwatertextWHC cdot textPET cdot\n    left1 - minleft(1 fractextLAItot3 right) right\n\nAEv is the actual evaporation of water from the soil [mm d⁻¹]\nwater is the soil water content [mm]\nWHC is the water holding capacity of the soil [mm]\nPET is the potential evapotranspiration [mm d⁻¹]\nLAItot is the total leaf area index of all plants [-]\n\n\n\n\n\n","category":"function"},{"location":"#GrasslandTraitSim.jl","page":"Home","title":"GrasslandTraitSim.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: ) (Image: SciML Code Style) (Image: License: GPL v3)","category":"page"},{"location":"","page":"Home","title":"Home","text":"A Julia package for simulating grassland dynamics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Author: Felix Nößler\nLicence: GPL-3.0","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please refer to the documentation for more information about the grassland simulation model.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here are slides from presentations that show concepts of the models:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ECEM 2023","category":"page"},{"location":"#Quick-install","page":"Home","title":"Quick install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download Julia.\nLaunch Julia and type","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Pkg\nPkg.add(url=\"https://github.com/felixnoessler/GrasslandTraitSim.jl\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Compatibility: The simulations were tested with Julia 1.10. I recommend using this version.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For more information on installing unregistered packages, see here. Here, you can browse the different versions of GrasslandTraitSim.jl: tags. ","category":"page"},{"location":"#Run-simulations","page":"Home","title":"Run simulations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"import GrasslandTraitSim as sim\nimport GrasslandTraitSim.Valid as valid\n\ninput_obj = valid.validation_input(; plotID = \"HEG01\", nspecies = 25);\np = sim.parameter(; input_obj)\nsol = sim.solve_prob(; input_obj, p);","category":"page"},{"location":"#Start-the-GUI-for-checking-the-calibration-results","page":"Home","title":"Start the GUI for checking the calibration results","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GLMakie\nimport GrasslandTraitSim as sim\nimport GrasslandTraitSim.Valid as valid\nimport GrasslandTraitSim.Vis as vis\nGLMakie.activate!()\n\nvis.dashboard(; sim, valid)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"}]
}
